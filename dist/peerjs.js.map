{
  "version": 3,
  "sources": ["../node_modules/peerjs-js-binarypack/lib/bufferbuilder.js", "../node_modules/peerjs-js-binarypack/lib/binarypack.js", "../node_modules/sdp/sdp.js", "../node_modules/rtcpeerconnection-shim/rtcpeerconnection.js", "../node_modules/eventemitter3/index.js", "../lib/util.ts", "../node_modules/webrtc-adapter/src/js/utils.js", "../node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js", "../node_modules/webrtc-adapter/src/js/chrome/getusermedia.js", "../node_modules/webrtc-adapter/src/js/chrome/getdisplaymedia.js", "../node_modules/webrtc-adapter/src/js/edge/edge_shim.js", "../node_modules/webrtc-adapter/src/js/edge/filtericeservers.js", "../node_modules/webrtc-adapter/src/js/edge/getusermedia.js", "../node_modules/webrtc-adapter/src/js/edge/getdisplaymedia.js", "../node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js", "../node_modules/webrtc-adapter/src/js/firefox/getusermedia.js", "../node_modules/webrtc-adapter/src/js/firefox/getdisplaymedia.js", "../node_modules/webrtc-adapter/src/js/safari/safari_shim.js", "../node_modules/webrtc-adapter/src/js/common_shim.js", "../node_modules/webrtc-adapter/src/js/adapter_factory.js", "../node_modules/webrtc-adapter/src/js/adapter_core.js", "../lib/supports.ts", "../lib/peer.ts", "../lib/logger.ts", "../lib/socket.ts", "../lib/enums.ts", "../lib/negotiator.ts", "../lib/baseconnection.ts", "../lib/mediaconnection.ts", "../lib/encodingQueue.ts", "../lib/dataconnection.ts", "../lib/api.ts", "../lib/exports.ts"],
  "sourcesContent": ["var binaryFeatures = {};\r\nbinaryFeatures.useBlobBuilder = (function () {\r\n  try {\r\n    new Blob([]);\r\n    return false;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nbinaryFeatures.useArrayBufferView = !binaryFeatures.useBlobBuilder && (function () {\r\n  try {\r\n    return (new Blob([new Uint8Array([])])).size === 0;\r\n  } catch (e) {\r\n    return true;\r\n  }\r\n})();\r\n\r\nmodule.exports.binaryFeatures = binaryFeatures;\r\nvar BlobBuilder = module.exports.BlobBuilder;\r\nif (typeof window !== 'undefined') {\r\n  BlobBuilder = module.exports.BlobBuilder = window.WebKitBlobBuilder ||\r\n    window.MozBlobBuilder || window.MSBlobBuilder || window.BlobBuilder;\r\n}\r\n\r\nfunction BufferBuilder () {\r\n  this._pieces = [];\r\n  this._parts = [];\r\n}\r\n\r\nBufferBuilder.prototype.append = function (data) {\r\n  if (typeof data === 'number') {\r\n    this._pieces.push(data);\r\n  } else {\r\n    this.flush();\r\n    this._parts.push(data);\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.flush = function () {\r\n  if (this._pieces.length > 0) {\r\n    var buf = new Uint8Array(this._pieces);\r\n    if (!binaryFeatures.useArrayBufferView) {\r\n      buf = buf.buffer;\r\n    }\r\n    this._parts.push(buf);\r\n    this._pieces = [];\r\n  }\r\n};\r\n\r\nBufferBuilder.prototype.getBuffer = function () {\r\n  this.flush();\r\n  if (binaryFeatures.useBlobBuilder) {\r\n    var builder = new BlobBuilder();\r\n    for (var i = 0, ii = this._parts.length; i < ii; i++) {\r\n      builder.append(this._parts[i]);\r\n    }\r\n    return builder.getBlob();\r\n  } else {\r\n    return new Blob(this._parts);\r\n  }\r\n};\r\n\r\nmodule.exports.BufferBuilder = BufferBuilder;\r\n", "var BufferBuilder = require('./bufferbuilder').BufferBuilder;\r\nvar binaryFeatures = require('./bufferbuilder').binaryFeatures;\r\n\r\nvar BinaryPack = {\r\n  unpack: function (data) {\r\n    var unpacker = new Unpacker(data);\r\n    return unpacker.unpack();\r\n  },\r\n  pack: function (data) {\r\n    var packer = new Packer();\r\n    packer.pack(data);\r\n    var buffer = packer.getBuffer();\r\n    return buffer;\r\n  }\r\n};\r\n\r\nmodule.exports = BinaryPack;\r\n\r\nfunction Unpacker (data) {\r\n  // Data is ArrayBuffer\r\n  this.index = 0;\r\n  this.dataBuffer = data;\r\n  this.dataView = new Uint8Array(this.dataBuffer);\r\n  this.length = this.dataBuffer.byteLength;\r\n}\r\n\r\nUnpacker.prototype.unpack = function () {\r\n  var type = this.unpack_uint8();\r\n  if (type < 0x80) {\r\n    return type;\r\n  } else if ((type ^ 0xe0) < 0x20) {\r\n    return (type ^ 0xe0) - 0x20;\r\n  }\r\n\r\n  var size;\r\n  if ((size = type ^ 0xa0) <= 0x0f) {\r\n    return this.unpack_raw(size);\r\n  } else if ((size = type ^ 0xb0) <= 0x0f) {\r\n    return this.unpack_string(size);\r\n  } else if ((size = type ^ 0x90) <= 0x0f) {\r\n    return this.unpack_array(size);\r\n  } else if ((size = type ^ 0x80) <= 0x0f) {\r\n    return this.unpack_map(size);\r\n  }\r\n\r\n  switch (type) {\r\n    case 0xc0:\r\n      return null;\r\n    case 0xc1:\r\n      return undefined;\r\n    case 0xc2:\r\n      return false;\r\n    case 0xc3:\r\n      return true;\r\n    case 0xca:\r\n      return this.unpack_float();\r\n    case 0xcb:\r\n      return this.unpack_double();\r\n    case 0xcc:\r\n      return this.unpack_uint8();\r\n    case 0xcd:\r\n      return this.unpack_uint16();\r\n    case 0xce:\r\n      return this.unpack_uint32();\r\n    case 0xcf:\r\n      return this.unpack_uint64();\r\n    case 0xd0:\r\n      return this.unpack_int8();\r\n    case 0xd1:\r\n      return this.unpack_int16();\r\n    case 0xd2:\r\n      return this.unpack_int32();\r\n    case 0xd3:\r\n      return this.unpack_int64();\r\n    case 0xd4:\r\n      return undefined;\r\n    case 0xd5:\r\n      return undefined;\r\n    case 0xd6:\r\n      return undefined;\r\n    case 0xd7:\r\n      return undefined;\r\n    case 0xd8:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_string(size);\r\n    case 0xd9:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_string(size);\r\n    case 0xda:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_raw(size);\r\n    case 0xdb:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_raw(size);\r\n    case 0xdc:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_array(size);\r\n    case 0xdd:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_array(size);\r\n    case 0xde:\r\n      size = this.unpack_uint16();\r\n      return this.unpack_map(size);\r\n    case 0xdf:\r\n      size = this.unpack_uint32();\r\n      return this.unpack_map(size);\r\n  }\r\n};\r\n\r\nUnpacker.prototype.unpack_uint8 = function () {\r\n  var byte = this.dataView[this.index] & 0xff;\r\n  this.index++;\r\n  return byte;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint16 = function () {\r\n  var bytes = this.read(2);\r\n  var uint16 =\r\n    ((bytes[0] & 0xff) * 256) + (bytes[1] & 0xff);\r\n  this.index += 2;\r\n  return uint16;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint32 = function () {\r\n  var bytes = this.read(4);\r\n  var uint32 =\r\n    ((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n    bytes[3];\r\n  this.index += 4;\r\n  return uint32;\r\n};\r\n\r\nUnpacker.prototype.unpack_uint64 = function () {\r\n  var bytes = this.read(8);\r\n  var uint64 =\r\n    ((((((bytes[0] * 256 +\r\n      bytes[1]) * 256 +\r\n      bytes[2]) * 256 +\r\n      bytes[3]) * 256 +\r\n      bytes[4]) * 256 +\r\n      bytes[5]) * 256 +\r\n      bytes[6]) * 256 +\r\n    bytes[7];\r\n  this.index += 8;\r\n  return uint64;\r\n};\r\n\r\nUnpacker.prototype.unpack_int8 = function () {\r\n  var uint8 = this.unpack_uint8();\r\n  return (uint8 < 0x80) ? uint8 : uint8 - (1 << 8);\r\n};\r\n\r\nUnpacker.prototype.unpack_int16 = function () {\r\n  var uint16 = this.unpack_uint16();\r\n  return (uint16 < 0x8000) ? uint16 : uint16 - (1 << 16);\r\n};\r\n\r\nUnpacker.prototype.unpack_int32 = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  return (uint32 < Math.pow(2, 31)) ? uint32\r\n    : uint32 - Math.pow(2, 32);\r\n};\r\n\r\nUnpacker.prototype.unpack_int64 = function () {\r\n  var uint64 = this.unpack_uint64();\r\n  return (uint64 < Math.pow(2, 63)) ? uint64\r\n    : uint64 - Math.pow(2, 64);\r\n};\r\n\r\nUnpacker.prototype.unpack_raw = function (size) {\r\n  if (this.length < this.index + size) {\r\n    throw new Error('BinaryPackFailure: index is out of range' +\r\n      ' ' + this.index + ' ' + size + ' ' + this.length);\r\n  }\r\n  var buf = this.dataBuffer.slice(this.index, this.index + size);\r\n  this.index += size;\r\n\r\n  // buf = util.bufferToString(buf);\r\n\r\n  return buf;\r\n};\r\n\r\nUnpacker.prototype.unpack_string = function (size) {\r\n  var bytes = this.read(size);\r\n  var i = 0;\r\n  var str = '';\r\n  var c;\r\n  var code;\r\n\r\n  while (i < size) {\r\n    c = bytes[i];\r\n    if (c < 128) {\r\n      str += String.fromCharCode(c);\r\n      i++;\r\n    } else if ((c ^ 0xc0) < 32) {\r\n      code = ((c ^ 0xc0) << 6) | (bytes[i + 1] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 2;\r\n    } else {\r\n      code = ((c & 15) << 12) | ((bytes[i + 1] & 63) << 6) |\r\n        (bytes[i + 2] & 63);\r\n      str += String.fromCharCode(code);\r\n      i += 3;\r\n    }\r\n  }\r\n\r\n  this.index += size;\r\n  return str;\r\n};\r\n\r\nUnpacker.prototype.unpack_array = function (size) {\r\n  var objects = new Array(size);\r\n  for (var i = 0; i < size; i++) {\r\n    objects[i] = this.unpack();\r\n  }\r\n  return objects;\r\n};\r\n\r\nUnpacker.prototype.unpack_map = function (size) {\r\n  var map = {};\r\n  for (var i = 0; i < size; i++) {\r\n    var key = this.unpack();\r\n    var value = this.unpack();\r\n    map[key] = value;\r\n  }\r\n  return map;\r\n};\r\n\r\nUnpacker.prototype.unpack_float = function () {\r\n  var uint32 = this.unpack_uint32();\r\n  var sign = uint32 >> 31;\r\n  var exp = ((uint32 >> 23) & 0xff) - 127;\r\n  var fraction = (uint32 & 0x7fffff) | 0x800000;\r\n  return (sign === 0 ? 1 : -1) *\r\n    fraction * Math.pow(2, exp - 23);\r\n};\r\n\r\nUnpacker.prototype.unpack_double = function () {\r\n  var h32 = this.unpack_uint32();\r\n  var l32 = this.unpack_uint32();\r\n  var sign = h32 >> 31;\r\n  var exp = ((h32 >> 20) & 0x7ff) - 1023;\r\n  var hfrac = (h32 & 0xfffff) | 0x100000;\r\n  var frac = hfrac * Math.pow(2, exp - 20) +\r\n    l32 * Math.pow(2, exp - 52);\r\n  return (sign === 0 ? 1 : -1) * frac;\r\n};\r\n\r\nUnpacker.prototype.read = function (length) {\r\n  var j = this.index;\r\n  if (j + length <= this.length) {\r\n    return this.dataView.subarray(j, j + length);\r\n  } else {\r\n    throw new Error('BinaryPackFailure: read index out of range');\r\n  }\r\n};\r\n\r\nfunction Packer () {\r\n  this.bufferBuilder = new BufferBuilder();\r\n}\r\n\r\nPacker.prototype.getBuffer = function () {\r\n  return this.bufferBuilder.getBuffer();\r\n};\r\n\r\nPacker.prototype.pack = function (value) {\r\n  var type = typeof (value);\r\n  if (type === 'string') {\r\n    this.pack_string(value);\r\n  } else if (type === 'number') {\r\n    if (Math.floor(value) === value) {\r\n      this.pack_integer(value);\r\n    } else {\r\n      this.pack_double(value);\r\n    }\r\n  } else if (type === 'boolean') {\r\n    if (value === true) {\r\n      this.bufferBuilder.append(0xc3);\r\n    } else if (value === false) {\r\n      this.bufferBuilder.append(0xc2);\r\n    }\r\n  } else if (type === 'undefined') {\r\n    this.bufferBuilder.append(0xc0);\r\n  } else if (type === 'object') {\r\n    if (value === null) {\r\n      this.bufferBuilder.append(0xc0);\r\n    } else {\r\n      var constructor = value.constructor;\r\n      if (constructor == Array) {\r\n        this.pack_array(value);\r\n      } else if (constructor == Blob || constructor == File || value instanceof Blob || value instanceof File) {\r\n        this.pack_bin(value);\r\n      } else if (constructor == ArrayBuffer) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value));\r\n        } else {\r\n          this.pack_bin(value);\r\n        }\r\n      } else if ('BYTES_PER_ELEMENT' in value) {\r\n        if (binaryFeatures.useArrayBufferView) {\r\n          this.pack_bin(new Uint8Array(value.buffer));\r\n        } else {\r\n          this.pack_bin(value.buffer);\r\n        }\r\n      } else if ((constructor == Object) || (constructor.toString().startsWith('class'))) {\r\n        this.pack_object(value);\r\n      } else if (constructor == Date) {\r\n        this.pack_string(value.toString());\r\n      } else if (typeof value.toBinaryPack === 'function') {\r\n        this.bufferBuilder.append(value.toBinaryPack());\r\n      } else {\r\n        throw new Error('Type \"' + constructor.toString() + '\" not yet supported');\r\n      }\r\n    }\r\n  } else {\r\n    throw new Error('Type \"' + type + '\" not yet supported');\r\n  }\r\n  this.bufferBuilder.flush();\r\n};\r\n\r\nPacker.prototype.pack_bin = function (blob) {\r\n  var length = blob.length || blob.byteLength || blob.size;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xa0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xda);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdb);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(blob);\r\n};\r\n\r\nPacker.prototype.pack_string = function (str) {\r\n  var length = utf8Length(str);\r\n\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0xb0 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xd8);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xd9);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  this.bufferBuilder.append(str);\r\n};\r\n\r\nPacker.prototype.pack_array = function (ary) {\r\n  var length = ary.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x90 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xdc);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdd);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var i = 0; i < length; i++) {\r\n    this.pack(ary[i]);\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_integer = function (num) {\r\n  if (num >= -0x20 && num <= 0x7f) {\r\n    this.bufferBuilder.append(num & 0xff);\r\n  } else if (num >= 0x00 && num <= 0xff) {\r\n    this.bufferBuilder.append(0xcc);\r\n    this.pack_uint8(num);\r\n  } else if (num >= -0x80 && num <= 0x7f) {\r\n    this.bufferBuilder.append(0xd0);\r\n    this.pack_int8(num);\r\n  } else if (num >= 0x0000 && num <= 0xffff) {\r\n    this.bufferBuilder.append(0xcd);\r\n    this.pack_uint16(num);\r\n  } else if (num >= -0x8000 && num <= 0x7fff) {\r\n    this.bufferBuilder.append(0xd1);\r\n    this.pack_int16(num);\r\n  } else if (num >= 0x00000000 && num <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xce);\r\n    this.pack_uint32(num);\r\n  } else if (num >= -0x80000000 && num <= 0x7fffffff) {\r\n    this.bufferBuilder.append(0xd2);\r\n    this.pack_int32(num);\r\n  } else if (num >= -0x8000000000000000 && num <= 0x7FFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xd3);\r\n    this.pack_int64(num);\r\n  } else if (num >= 0x0000000000000000 && num <= 0xFFFFFFFFFFFFFFFF) {\r\n    this.bufferBuilder.append(0xcf);\r\n    this.pack_uint64(num);\r\n  } else {\r\n    throw new Error('Invalid integer');\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_double = function (num) {\r\n  var sign = 0;\r\n  if (num < 0) {\r\n    sign = 1;\r\n    num = -num;\r\n  }\r\n  var exp = Math.floor(Math.log(num) / Math.LN2);\r\n  var frac0 = num / Math.pow(2, exp) - 1;\r\n  var frac1 = Math.floor(frac0 * Math.pow(2, 52));\r\n  var b32 = Math.pow(2, 32);\r\n  var h32 = (sign << 31) | ((exp + 1023) << 20) |\r\n    (frac1 / b32) & 0x0fffff;\r\n  var l32 = frac1 % b32;\r\n  this.bufferBuilder.append(0xcb);\r\n  this.pack_int32(h32);\r\n  this.pack_int32(l32);\r\n};\r\n\r\nPacker.prototype.pack_object = function (obj) {\r\n  var keys = Object.keys(obj);\r\n  var length = keys.length;\r\n  if (length <= 0x0f) {\r\n    this.pack_uint8(0x80 + length);\r\n  } else if (length <= 0xffff) {\r\n    this.bufferBuilder.append(0xde);\r\n    this.pack_uint16(length);\r\n  } else if (length <= 0xffffffff) {\r\n    this.bufferBuilder.append(0xdf);\r\n    this.pack_uint32(length);\r\n  } else {\r\n    throw new Error('Invalid length');\r\n  }\r\n  for (var prop in obj) {\r\n    if (obj.hasOwnProperty(prop)) {\r\n      this.pack(prop);\r\n      this.pack(obj[prop]);\r\n    }\r\n  }\r\n};\r\n\r\nPacker.prototype.pack_uint8 = function (num) {\r\n  this.bufferBuilder.append(num);\r\n};\r\n\r\nPacker.prototype.pack_uint16 = function (num) {\r\n  this.bufferBuilder.append(num >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_uint32 = function (num) {\r\n  var n = num & 0xffffffff;\r\n  this.bufferBuilder.append((n & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((n & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((n & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((n & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_uint64 = function (num) {\r\n  var high = num / Math.pow(2, 32);\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int8 = function (num) {\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int16 = function (num) {\r\n  this.bufferBuilder.append((num & 0xff00) >> 8);\r\n  this.bufferBuilder.append(num & 0xff);\r\n};\r\n\r\nPacker.prototype.pack_int32 = function (num) {\r\n  this.bufferBuilder.append((num >>> 24) & 0xff);\r\n  this.bufferBuilder.append((num & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((num & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((num & 0x000000ff));\r\n};\r\n\r\nPacker.prototype.pack_int64 = function (num) {\r\n  var high = Math.floor(num / Math.pow(2, 32));\r\n  var low = num % Math.pow(2, 32);\r\n  this.bufferBuilder.append((high & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((high & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((high & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((high & 0x000000ff));\r\n  this.bufferBuilder.append((low & 0xff000000) >>> 24);\r\n  this.bufferBuilder.append((low & 0x00ff0000) >>> 16);\r\n  this.bufferBuilder.append((low & 0x0000ff00) >>> 8);\r\n  this.bufferBuilder.append((low & 0x000000ff));\r\n};\r\n\r\nfunction _utf8Replace (m) {\r\n  var code = m.charCodeAt(0);\r\n\r\n  if (code <= 0x7ff) return '00';\r\n  if (code <= 0xffff) return '000';\r\n  if (code <= 0x1fffff) return '0000';\r\n  if (code <= 0x3ffffff) return '00000';\r\n  return '000000';\r\n}\r\n\r\nfunction utf8Length (str) {\r\n  if (str.length > 600) {\r\n    // Blob method faster for large strings\r\n    return (new Blob([str])).size;\r\n  } else {\r\n    return str.replace(/[^\\u0000-\\u007F]/g, _utf8Replace).length;\r\n  }\r\n}\r\n", "/* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// returns the session description.\nSDPUtils.getDescription = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  return sections && sections[0];\n};\n\n// returns the individual media sections.\nSDPUtils.getMediaSections = function(blob) {\n  var sections = SDPUtils.splitSections(blob);\n  sections.shift();\n  return sections;\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    address: parts[4], // address is an alias for ip.\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.address || candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress);\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort);\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.usernameFragment || candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.usernameFragment || candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n};\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  parsed.channels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  // legacy alias, got renamed back to channels in ORTC.\n  parsed.numChannels = parsed.channels;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  var channels = codec.channels || codec.numChannels || 1;\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (channels !== 1 ? '/' + channels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n        ? '/' + headerExtension.direction\n        : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      if (codec.parameters[param]) {\n        params.push(param + '=' + codec.parameters[param]);\n      } else {\n        params.push(param);\n      }\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\nSDPUtils.parseSsrcGroup = function(line) {\n  var parts = line.substr(13).split(' ');\n  return {\n    semantics: parts.shift(),\n    ssrcs: parts.map(function(ssrc) {\n      return parseInt(ssrc, 10);\n    })\n  };\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n};\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n\n// Parses a=crypto lines into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#dictionary-rtcsrtpsdesparameters-members\nSDPUtils.parseCryptoLine = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    tag: parseInt(parts[0], 10),\n    cryptoSuite: parts[1],\n    keyParams: parts[2],\n    sessionParams: parts.slice(3),\n  };\n};\n\nSDPUtils.writeCryptoLine = function(parameters) {\n  return 'a=crypto:' + parameters.tag + ' ' +\n    parameters.cryptoSuite + ' ' +\n    (typeof parameters.keyParams === 'object'\n      ? SDPUtils.writeCryptoKeyParams(parameters.keyParams)\n      : parameters.keyParams) +\n    (parameters.sessionParams ? ' ' + parameters.sessionParams.join(' ') : '') +\n    '\\r\\n';\n};\n\n// Parses the crypto key parameters into\n//   https://rawgit.com/aboba/edgertc/master/msortc-rs4.html#rtcsrtpkeyparam*\nSDPUtils.parseCryptoKeyParams = function(keyParams) {\n  if (keyParams.indexOf('inline:') !== 0) {\n    return null;\n  }\n  var parts = keyParams.substr(7).split('|');\n  return {\n    keyMethod: 'inline',\n    keySalt: parts[0],\n    lifeTime: parts[1],\n    mkiValue: parts[2] ? parts[2].split(':')[0] : undefined,\n    mkiLength: parts[2] ? parts[2].split(':')[1] : undefined,\n  };\n};\n\nSDPUtils.writeCryptoKeyParams = function(keyParams) {\n  return keyParams.keyMethod + ':'\n    + keyParams.keySalt +\n    (keyParams.lifeTime ? '|' + keyParams.lifeTime : '') +\n    (keyParams.mkiValue && keyParams.mkiLength\n      ? '|' + keyParams.mkiValue + ':' + keyParams.mkiLength\n      : '');\n};\n\n// Extracts all SDES paramters.\nSDPUtils.getCryptoParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=crypto:');\n  return lines.map(SDPUtils.parseCryptoLine);\n};\n\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var ufrag = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-ufrag:')[0];\n  var pwd = SDPUtils.matchPrefix(mediaSection + sessionpart,\n    'a=ice-pwd:')[0];\n  if (!(ufrag && pwd)) {\n    return null;\n  }\n  return {\n    usernameFragment: ufrag.substr(12),\n    password: pwd.substr(10),\n  };\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n      mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n        mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  if (caps.headerExtensions) {\n    caps.headerExtensions.forEach(function(extension) {\n      sdp += SDPUtils.writeExtmap(extension);\n    });\n  }\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.substr(17).split(' ');\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10)\n      };\n      if (primarySsrc && secondarySsrc) {\n        encParam.rtx = {ssrc: secondarySsrc};\n      }\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: primarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  // Gets the first SSRC. Note tha with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(obj) {\n      return obj.attribute === 'cname';\n    })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attr\u0456bute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(msidParts) {\n      return msidParts.attribute === 'msid';\n    });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// SCTP\n// parses draft-ietf-mmusic-sctp-sdp-26 first and falls back\n// to draft-ietf-mmusic-sctp-sdp-05\nSDPUtils.parseSctpDescription = function(mediaSection) {\n  var mline = SDPUtils.parseMLine(mediaSection);\n  var maxSizeLine = SDPUtils.matchPrefix(mediaSection, 'a=max-message-size:');\n  var maxMessageSize;\n  if (maxSizeLine.length > 0) {\n    maxMessageSize = parseInt(maxSizeLine[0].substr(19), 10);\n  }\n  if (isNaN(maxMessageSize)) {\n    maxMessageSize = 65536;\n  }\n  var sctpPort = SDPUtils.matchPrefix(mediaSection, 'a=sctp-port:');\n  if (sctpPort.length > 0) {\n    return {\n      port: parseInt(sctpPort[0].substr(12), 10),\n      protocol: mline.fmt,\n      maxMessageSize: maxMessageSize\n    };\n  }\n  var sctpMapLines = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:');\n  if (sctpMapLines.length > 0) {\n    var parts = SDPUtils.matchPrefix(mediaSection, 'a=sctpmap:')[0]\n      .substr(10)\n      .split(' ');\n    return {\n      port: parseInt(parts[0], 10),\n      protocol: parts[1],\n      maxMessageSize: maxMessageSize\n    };\n  }\n};\n\n// SCTP\n// outputs the draft-ietf-mmusic-sctp-sdp-26 version that all browsers\n// support by now receiving in this format, unless we originally parsed\n// as the draft-ietf-mmusic-sctp-sdp-05 format (indicated by the m-line\n// protocol of DTLS/SCTP -- without UDP/ or TCP/)\nSDPUtils.writeSctpDescription = function(media, sctp) {\n  var output = [];\n  if (media.protocol !== 'DTLS/SCTP') {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.protocol + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctp-port:' + sctp.port + '\\r\\n'\n    ];\n  } else {\n    output = [\n      'm=' + media.kind + ' 9 ' + media.protocol + ' ' + sctp.port + '\\r\\n',\n      'c=IN IP4 0.0.0.0\\r\\n',\n      'a=sctpmap:' + sctp.port + ' ' + sctp.protocol + ' 65535\\r\\n'\n    ];\n  }\n  if (sctp.maxMessageSize !== undefined) {\n    output.push('a=max-message-size:' + sctp.maxMessageSize + '\\r\\n');\n  }\n  return output.join('');\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\n// sessUser is optional and defaults to 'thisisadapterortc'\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer, sessUser) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  var user = sessUser || 'thisisadapterortc';\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=' + user + ' ' + sessionId + ' ' + version +\n        ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n    transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n    transceiver.dtlsTransport.getLocalParameters(),\n    type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var parts = lines[0].substr(2).split(' ');\n  return {\n    kind: parts[0],\n    port: parseInt(parts[1], 10),\n    protocol: parts[2],\n    fmt: parts.slice(3).join(' ')\n  };\n};\n\nSDPUtils.parseOLine = function(mediaSection) {\n  var line = SDPUtils.matchPrefix(mediaSection, 'o=')[0];\n  var parts = line.substr(2).split(' ');\n  return {\n    username: parts[0],\n    sessionId: parts[1],\n    sessionVersion: parseInt(parts[2], 10),\n    netType: parts[3],\n    addressType: parts[4],\n    address: parts[5]\n  };\n};\n\n// a very naive interpretation of a valid SDP.\nSDPUtils.isValidSDP = function(blob) {\n  if (typeof blob !== 'string' || blob.length === 0) {\n    return false;\n  }\n  var lines = SDPUtils.splitLines(blob);\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].length < 2 || lines[i].charAt(1) !== '=') {\n      return false;\n    }\n    // TODO: check the modifier a bit more.\n  }\n  return true;\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction fixStatsType(stat) {\n  return {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  }[stat.type] || stat.type;\n}\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    var trackId = transceiver.rtpSender._initialTrackId ||\n        transceiver.rtpSender.track.id;\n    transceiver.rtpSender._initialTrackId = trackId;\n    // spec.\n    var msid = 'msid:' + (stream ? stream.id : '-') + ' ' +\n        trackId + '\\r\\n';\n    sdp += 'a=' + msid;\n    // for Chrome. Legacy should no longer be required.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n\n    // RTX\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all field\u0455 are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  // legacy error codes from https://heycam.github.io/webidl/#idl-DOMException-error-names\n  e.code = {\n    NotSupportedError: 9,\n    InvalidStateError: 11,\n    InvalidAccessError: 15,\n    TypeError: undefined,\n    OperationError: undefined\n  }[name];\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  // https://w3c.github.io/mediacapture-main/#mediastream\n  // Helper function to add the track to the stream and\n  // dispatch the event ourselves.\n  function addTrackToStreamAndFireEvent(track, stream) {\n    stream.addTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('addtrack',\n        {track: track}));\n  }\n\n  function removeTrackFromStreamAndFireEvent(track, stream) {\n    stream.removeTrack(track);\n    stream.dispatchEvent(new window.MediaStreamTrackEvent('removetrack',\n        {track: track}));\n  }\n\n  function fireAddTrack(pc, track, receiver, streams) {\n    var trackEvent = new Event('track');\n    trackEvent.track = track;\n    trackEvent.receiver = receiver;\n    trackEvent.transceiver = {receiver: receiver};\n    trackEvent.streams = streams;\n    window.setTimeout(function() {\n      pc._dispatchEvent('track', trackEvent);\n    });\n  }\n\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this._localDescription = null;\n    this._remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.connectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers.push(new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        }));\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  Object.defineProperty(RTCPeerConnection.prototype, 'localDescription', {\n    configurable: true,\n    get: function() {\n      return this._localDescription;\n    }\n  });\n  Object.defineProperty(RTCPeerConnection.prototype, 'remoteDescription', {\n    configurable: true,\n    get: function() {\n      return this._remoteDescription;\n    }\n  });\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (which is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind, doNotAdd) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    if (!doNotAdd) {\n      this.transceivers.push(transceiver);\n    }\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (this._isClosed) {\n      throw makeError('InvalidStateError',\n          'Attempted to call removeTrack on a closed peerconnection.');\n    }\n\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].bufferedCandidateEvents !== null) {\n        pc.transceivers[sdpMLineIndex].bufferedCandidateEvents.push(event);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var bufferedCandidateEvents =\n      this.transceivers[sdpMLineIndex].bufferedCandidateEvents;\n    this.transceivers[sdpMLineIndex].bufferedCandidateEvents = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // \u0455dpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete\u2025\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        // also the usernameFragment. TODO: update SDP to take both variants.\n        cand.ufrag = iceGatherer.getLocalParameters().usernameFragment;\n\n        var serializedCandidate = SDPUtils.writeCandidate(cand);\n        event.candidate = Object.assign(event.candidate,\n            SDPUtils.parseCandidate(serializedCandidate));\n\n        event.candidate.candidate = serializedCandidate;\n        event.candidate.toJSON = function() {\n          return {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n            usernameFragment: event.candidate.usernameFragment\n          };\n        };\n      }\n\n      // update local description.\n      var sections = SDPUtils.getMediaSections(pc._localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc._localDescription.sdp =\n          SDPUtils.getDescription(pc._localDescription.sdp) +\n          sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      bufferedCandidateEvents.forEach(function(e) {\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateIceConnectionState();\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itself.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      } else {\n        params.encodings = [{}];\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc._remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.rejected) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    pc._localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-local-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    // Note: pranswer is not supported.\n    if (['offer', 'answer'].indexOf(description.type) === -1) {\n      return Promise.reject(makeError('TypeError',\n          'Unsupported type \"' + description.type + '\"'));\n    }\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, pc.signalingState) || pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    pc.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    pc.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      pc.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      pc.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (rejected || (kind === 'application' && (protocol === 'DTLS/SCTP' ||\n          protocol === 'UDP/DTLS/SCTP'))) {\n        // TODO: this is dangerous in the case where a non-rejected m-line\n        //     becomes rejected.\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          kind: kind,\n          protocol: protocol,\n          rejected: true\n        };\n        return;\n      }\n\n      if (!rejected && pc.transceivers[sdpMLineIndex] &&\n          pc.transceivers[sdpMLineIndex].rejected) {\n        // recycle a rejected transceiver.\n        pc.transceivers[sdpMLineIndex] = pc._createTransceiver(kind, true);\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        // If the offer contained RTX but the answer did not,\n        // remove RTX from sendEncodingParameters.\n        var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n        var hasRtx = commonCapabilities.codecs.filter(function(c) {\n          return c.name.toLowerCase() === 'rtx';\n        }).length;\n        if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n          delete transceiver.sendEncodingParameters[0].rtx;\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (pc._dtlsRole === undefined) {\n      pc._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    pc._remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    if (description.type === 'offer') {\n      pc._updateSignalingState('have-remote-offer');\n    } else {\n      pc._updateSignalingState('stable');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation) {\n        pc.needNegotiation = false;\n        var event = new Event('negotiationneeded');\n        pc._dispatchEvent('negotiationneeded', event);\n      }\n    }, 0);\n  };\n\n  // Update the ice connection state.\n  RTCPeerConnection.prototype._updateIceConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n      }\n    });\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.checking > 0) {\n      newState = 'checking';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    } else if (states.completed > 0) {\n      newState = 'completed';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.iceTransport && transceiver.dtlsTransport &&\n          !transceiver.rejected) {\n        states[transceiver.iceTransport.state]++;\n        states[transceiver.dtlsTransport.state]++;\n      }\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.connectionState) {\n      this.connectionState = newState;\n      var event = new Event('connectionstatechange');\n      this._dispatchEvent('connectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = pc.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    pc.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        pc._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        pc._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = transceiver.mid || SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n\n        // for subsequent offers, we might have to re-use the payload\n        // type of the last offer.\n        if (transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.codecs) {\n          transceiver.remoteCapabilities.codecs.forEach(function(remoteCodec) {\n            if (codec.name.toLowerCase() === remoteCodec.name.toLowerCase() &&\n                codec.clockRate === remoteCodec.clockRate) {\n              codec.preferredPayloadType = remoteCodec.payloadType;\n            }\n          });\n        }\n      });\n      localCapabilities.headerExtensions.forEach(function(hdrExt) {\n        var remoteExtensions = transceiver.remoteCapabilities &&\n            transceiver.remoteCapabilities.headerExtensions || [];\n        remoteExtensions.forEach(function(rHdrExt) {\n          if (hdrExt.uri === rHdrExt.uri) {\n            hdrExt.id = rHdrExt.id;\n          }\n        });\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (pc._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (pc._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    if (!(pc.signalingState === 'have-remote-offer' ||\n        pc.signalingState === 'have-local-pranswer')) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer in signalingState ' + pc.signalingState));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(pc._sdpSessionId,\n        pc._sdpSessionVersion++);\n    if (pc.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + pc.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    var mediaSectionsInOffer = SDPUtils.getMediaSections(\n        pc._remoteDescription.sdp).length;\n    pc.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.rejected) {\n        if (transceiver.kind === 'application') {\n          if (transceiver.protocol === 'DTLS/SCTP') { // legacy fmt\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n';\n          } else {\n            sdp += 'm=application 0 ' + transceiver.protocol +\n                ' webrtc-datachannel\\r\\n';\n          }\n        } else if (transceiver.kind === 'audio') {\n          sdp += 'm=audio 0 UDP/TLS/RTP/SAVPF 0\\r\\n' +\n              'a=rtpmap:0 PCMU/8000\\r\\n';\n        } else if (transceiver.kind === 'video') {\n          sdp += 'm=video 0 UDP/TLS/RTP/SAVPF 120\\r\\n' +\n              'a=rtpmap:120 VP8/90000\\r\\n';\n        }\n        sdp += 'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=inactive\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var pc = this;\n    var sections;\n    if (candidate && !(candidate.sdpMLineIndex !== undefined ||\n        candidate.sdpMid)) {\n      return Promise.reject(new TypeError('sdpMLineIndex or sdpMid required'));\n    }\n\n    // TODO: needs to go into ops queue.\n    return new Promise(function(resolve, reject) {\n      if (!pc._remoteDescription) {\n        return reject(makeError('InvalidStateError',\n            'Can not add ICE candidate without a remote description'));\n      } else if (!candidate || candidate.candidate === '') {\n        for (var j = 0; j < pc.transceivers.length; j++) {\n          if (pc.transceivers[j].rejected) {\n            continue;\n          }\n          pc.transceivers[j].iceTransport.addRemoteCandidate({});\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[j] += 'a=end-of-candidates\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n          if (pc.usingBundle) {\n            break;\n          }\n        }\n      } else {\n        var sdpMLineIndex = candidate.sdpMLineIndex;\n        if (candidate.sdpMid) {\n          for (var i = 0; i < pc.transceivers.length; i++) {\n            if (pc.transceivers[i].mid === candidate.sdpMid) {\n              sdpMLineIndex = i;\n              break;\n            }\n          }\n        }\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        if (transceiver) {\n          if (transceiver.rejected) {\n            return resolve();\n          }\n          var cand = Object.keys(candidate.candidate).length > 0 ?\n              SDPUtils.parseCandidate(candidate.candidate) : {};\n          // Ignore Chrome's invalid candidates since Edge does not like them.\n          if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n            return resolve();\n          }\n          // Ignore RTCP candidates, we assume RTCP-MUX.\n          if (cand.component && cand.component !== 1) {\n            return resolve();\n          }\n          // when using bundle, avoid adding candidates to the wrong\n          // ice transport. And avoid adding candidates added in the SDP.\n          if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n              transceiver.iceTransport !== pc.transceivers[0].iceTransport)) {\n            if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n              return reject(makeError('OperationError',\n                  'Can not add ICE candidate'));\n            }\n          }\n\n          // update the remoteDescription.\n          var candidateString = candidate.candidate.trim();\n          if (candidateString.indexOf('a=') === 0) {\n            candidateString = candidateString.substr(2);\n          }\n          sections = SDPUtils.getMediaSections(pc._remoteDescription.sdp);\n          sections[sdpMLineIndex] += 'a=' +\n              (cand.type ? candidateString : 'end-of-candidates')\n              + '\\r\\n';\n          pc._remoteDescription.sdp =\n              SDPUtils.getDescription(pc._remoteDescription.sdp) +\n              sections.join('');\n        } else {\n          return reject(makeError('OperationError',\n              'Can not add ICE candidate'));\n        }\n      }\n      resolve();\n    });\n  };\n\n  RTCPeerConnection.prototype.getStats = function(selector) {\n    if (selector && selector instanceof window.MediaStreamTrack) {\n      var senderOrReceiver = null;\n      this.transceivers.forEach(function(transceiver) {\n        if (transceiver.rtpSender &&\n            transceiver.rtpSender.track === selector) {\n          senderOrReceiver = transceiver.rtpSender;\n        } else if (transceiver.rtpReceiver &&\n            transceiver.rtpReceiver.track === selector) {\n          senderOrReceiver = transceiver.rtpReceiver;\n        }\n      });\n      if (!senderOrReceiver) {\n        throw makeError('InvalidAccessError', 'Invalid selector.');\n      }\n      return senderOrReceiver.getStats();\n    }\n\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    return Promise.all(promises).then(function(allStats) {\n      var results = new Map();\n      allStats.forEach(function(stats) {\n        stats.forEach(function(stat) {\n          results.set(stat.id, stat);\n        });\n      });\n      return results;\n    });\n  };\n\n  // fix low-level stat names and return Map instead of object.\n  var ortcObjects = ['RTCRtpSender', 'RTCRtpReceiver', 'RTCIceGatherer',\n    'RTCIceTransport', 'RTCDtlsTransport'];\n  ortcObjects.forEach(function(ortcObjectName) {\n    var obj = window[ortcObjectName];\n    if (obj && obj.prototype && obj.prototype.getStats) {\n      var nativeGetstats = obj.prototype.getStats;\n      obj.prototype.getStats = function() {\n        return nativeGetstats.apply(this)\n        .then(function(nativeStats) {\n          var mapStats = new Map();\n          Object.keys(nativeStats).forEach(function(id) {\n            nativeStats[id].type = fixStatsType(nativeStats[id]);\n            mapStats.set(id, nativeStats[id]);\n          });\n          return mapStats;\n        });\n      };\n    }\n  });\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n", "'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n", "import * as BinaryPack from \"peerjs-js-binarypack\";\nimport { Supports } from './supports';\nimport { UtilSupportsObj } from '..';\n\nconst DEFAULT_CONFIG = {\n  iceServers: [\n    { urls: \"stun:stun.l.google.com:19302\" },\n    { urls: \"turn:0.peerjs.com:3478\", username: \"peerjs\", credential: \"peerjsp\" }\n  ],\n  sdpSemantics: \"unified-plan\"\n};\n\nexport const util = new class {\n  noop(): void { }\n\n  readonly CLOUD_HOST = \"0.peerjs.com\";\n  readonly CLOUD_PORT = 443;\n\n  // Browsers that need chunking:\n  readonly chunkedBrowsers = { Chrome: 1, chrome: 1 };\n  readonly chunkedMTU = 16300; // The original 60000 bytes setting does not work when sending data from Firefox to Chrome, which is \"cut off\" after 16384 bytes and delivered individually.\n\n  // Returns browser-agnostic default config\n  readonly defaultConfig = DEFAULT_CONFIG;\n\n  readonly browser = Supports.getBrowser();\n  readonly browserVersion = Supports.getVersion();\n\n  // Lists which features are supported\n  readonly supports = (function () {\n    const supported: UtilSupportsObj = {\n      browser: Supports.isBrowserSupported(),\n      webRTC: Supports.isWebRTCSupported(),\n      audioVideo: false,\n      data: false,\n      binaryBlob: false,\n      reliable: false,\n    };\n\n    if (!supported.webRTC) return supported;\n\n    let pc: RTCPeerConnection;\n\n    try {\n      pc = new RTCPeerConnection(DEFAULT_CONFIG);\n\n      supported.audioVideo = true;\n\n      let dc: RTCDataChannel;\n\n      try {\n        dc = pc.createDataChannel(\"_PEERJSTEST\", { ordered: true });\n        supported.data = true;\n        supported.reliable = !!dc.ordered;\n\n        // Binary test\n        try {\n          dc.binaryType = \"blob\";\n          supported.binaryBlob = !Supports.isIOS;\n        } catch (e) {\n        }\n      } catch (e) {\n      } finally {\n        if (dc) {\n          dc.close();\n        }\n      }\n    } catch (e) {\n    } finally {\n      if (pc) {\n        pc.close();\n      }\n    }\n\n    return supported;\n  })();\n\n  // Ensure alphanumeric ids\n  validateId(id: string): boolean {\n    // Allow empty ids\n    return !id || /^[A-Za-z0-9]+(?:[ _-][A-Za-z0-9]+)*$/.test(id);\n  }\n\n  pack = BinaryPack.pack;\n  unpack = BinaryPack.unpack;\n\n  // Binary stuff\n\n  private _dataCount: number = 1;\n\n  chunk(blob: Blob): { __peerData: number, n: number, total: number, data: Blob }[] {\n    const chunks = [];\n    const size = blob.size;\n    const total = Math.ceil(size / util.chunkedMTU);\n\n    let index = 0;\n    let start = 0;\n\n    while (start < size) {\n      const end = Math.min(size, start + util.chunkedMTU);\n      const b = blob.slice(start, end);\n\n      const chunk = {\n        __peerData: this._dataCount,\n        n: index,\n        data: b,\n        total,\n      };\n\n      chunks.push(chunk);\n\n      start = end;\n      index++;\n    }\n\n    this._dataCount++;\n\n    return chunks;\n  }\n\n  blobToArrayBuffer(blob: Blob, cb: (arg: ArrayBuffer | null) => void): FileReader {\n    const fr = new FileReader();\n\n    fr.onload = function (evt) {\n      if (evt.target) {\n        cb(evt.target.result as ArrayBuffer);\n      }\n    };\n\n    fr.readAsArrayBuffer(blob);\n\n    return fr;\n  }\n\n  binaryStringToArrayBuffer(binary: string): ArrayBuffer | SharedArrayBuffer {\n    const byteArray = new Uint8Array(binary.length);\n\n    for (let i = 0; i < binary.length; i++) {\n      byteArray[i] = binary.charCodeAt(i) & 0xff;\n    }\n\n    return byteArray.buffer;\n  }\n\n  randomToken(): string {\n    return Math.random()\n      .toString(36)\n      .substr(2);\n  }\n\n  isSecure(): boolean {\n    return location.protocol === \"https:\";\n  }\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nlet logDisabled_ = true;\nlet deprecationWarnings_ = true;\n\n/**\n * Extract browser version out of the provided user agent string.\n *\n * @param {!string} uastring userAgent string.\n * @param {!string} expr Regular expression used as match criteria.\n * @param {!number} pos position in the version string to be returned.\n * @return {!number} browser version.\n */\nexport function extractVersion(uastring, expr, pos) {\n  const match = uastring.match(expr);\n  return match && match.length >= pos && parseInt(match[pos], 10);\n}\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object (or false to prevent\n// the event).\nexport function wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  const nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    const wrappedCallback = (e) => {\n      const modifiedEvent = wrapper(e);\n      if (modifiedEvent) {\n        if (cb.handleEvent) {\n          cb.handleEvent(modifiedEvent);\n        } else {\n          cb(modifiedEvent);\n        }\n      }\n    };\n    this._eventMap = this._eventMap || {};\n    if (!this._eventMap[eventNameToWrap]) {\n      this._eventMap[eventNameToWrap] = new Map();\n    }\n    this._eventMap[eventNameToWrap].set(cb, wrappedCallback);\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  const nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[eventNameToWrap]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    if (!this._eventMap[eventNameToWrap].has(cb)) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    const unwrappedCb = this._eventMap[eventNameToWrap].get(cb);\n    this._eventMap[eventNameToWrap].delete(cb);\n    if (this._eventMap[eventNameToWrap].size === 0) {\n      delete this._eventMap[eventNameToWrap];\n    }\n    if (Object.keys(this._eventMap).length === 0) {\n      delete this._eventMap;\n    }\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get() {\n      return this['_on' + eventNameToWrap];\n    },\n    set(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n}\n\nexport function disableLog(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  logDisabled_ = bool;\n  return (bool) ? 'adapter.js logging disabled' :\n      'adapter.js logging enabled';\n}\n\n/**\n * Disable or enable deprecation warnings\n * @param {!boolean} bool set to true to disable warnings.\n */\nexport function disableWarnings(bool) {\n  if (typeof bool !== 'boolean') {\n    return new Error('Argument type: ' + typeof bool +\n        '. Please use a boolean.');\n  }\n  deprecationWarnings_ = !bool;\n  return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n}\n\nexport function log() {\n  if (typeof window === 'object') {\n    if (logDisabled_) {\n      return;\n    }\n    if (typeof console !== 'undefined' && typeof console.log === 'function') {\n      console.log.apply(console, arguments);\n    }\n  }\n}\n\n/**\n * Shows a deprecation warning suggesting the modern and spec-compatible API.\n */\nexport function deprecated(oldMethod, newMethod) {\n  if (!deprecationWarnings_) {\n    return;\n  }\n  console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n      ' instead.');\n}\n\n/**\n * Browser detector.\n *\n * @return {object} result containing browser and version\n *     properties.\n */\nexport function detectBrowser(window) {\n  // Returned result object.\n  const result = {browser: null, version: null};\n\n  // Fail early if it's not a browser\n  if (typeof window === 'undefined' || !window.navigator) {\n    result.browser = 'Not a browser.';\n    return result;\n  }\n\n  const {navigator} = window;\n\n  if (navigator.mozGetUserMedia) { // Firefox.\n    result.browser = 'firefox';\n    result.version = extractVersion(navigator.userAgent,\n        /Firefox\\/(\\d+)\\./, 1);\n  } else if (navigator.webkitGetUserMedia ||\n      (window.isSecureContext === false && window.webkitRTCPeerConnection &&\n       !window.RTCIceGatherer)) {\n    // Chrome, Chromium, Webview, Opera.\n    // Version matches Chrome/WebRTC version.\n    // Chrome 74 removed webkitGetUserMedia on http as well so we need the\n    // more complicated fallback to webkitRTCPeerConnection.\n    result.browser = 'chrome';\n    result.version = extractVersion(navigator.userAgent,\n        /Chrom(e|ium)\\/(\\d+)\\./, 2);\n  } else if (navigator.mediaDevices &&\n      navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n    result.browser = 'edge';\n    result.version = extractVersion(navigator.userAgent,\n        /Edge\\/(\\d+).(\\d+)$/, 2);\n  } else if (window.RTCPeerConnection &&\n      navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) { // Safari.\n    result.browser = 'safari';\n    result.version = extractVersion(navigator.userAgent,\n        /AppleWebKit\\/(\\d+)\\./, 1);\n    result.supportsUnifiedPlan = window.RTCRtpTransceiver &&\n        'currentDirection' in window.RTCRtpTransceiver.prototype;\n  } else { // Default fallthrough: not supported.\n    result.browser = 'Not a supported browser.';\n    return result;\n  }\n\n  return result;\n}\n\n/**\n * Checks if something is an object.\n *\n * @param {*} val The something you want to check.\n * @return true if val is an object, false otherwise.\n */\nfunction isObject(val) {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Remove all empty objects and undefined values\n * from a nested object -- an enhanced and vanilla version\n * of Lodash's `compact`.\n */\nexport function compactObject(data) {\n  if (!isObject(data)) {\n    return data;\n  }\n\n  return Object.keys(data).reduce(function(accumulator, key) {\n    const isObj = isObject(data[key]);\n    const value = isObj ? compactObject(data[key]) : data[key];\n    const isEmptyObject = isObj && !Object.keys(value).length;\n    if (value === undefined || isEmptyObject) {\n      return accumulator;\n    }\n    return Object.assign(accumulator, {[key]: value});\n  }, {});\n}\n\n/* iterates the stats graph recursively. */\nexport function walkStats(stats, base, resultSet) {\n  if (!base || resultSet.has(base.id)) {\n    return;\n  }\n  resultSet.set(base.id, base);\n  Object.keys(base).forEach(name => {\n    if (name.endsWith('Id')) {\n      walkStats(stats, stats.get(base[name]), resultSet);\n    } else if (name.endsWith('Ids')) {\n      base[name].forEach(id => {\n        walkStats(stats, stats.get(id), resultSet);\n      });\n    }\n  });\n}\n\n/* filter getStats for a sender/receiver track. */\nexport function filterStats(result, track, outbound) {\n  const streamStatsType = outbound ? 'outbound-rtp' : 'inbound-rtp';\n  const filteredResult = new Map();\n  if (track === null) {\n    return filteredResult;\n  }\n  const trackStats = [];\n  result.forEach(value => {\n    if (value.type === 'track' &&\n        value.trackIdentifier === track.id) {\n      trackStats.push(value);\n    }\n  });\n  trackStats.forEach(trackStat => {\n    result.forEach(stats => {\n      if (stats.type === streamStatsType && stats.trackId === trackStat.id) {\n        walkStats(result, stats, filteredResult);\n      }\n    });\n  });\n  return filteredResult;\n}\n\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimMediaStream(window) {\n  window.MediaStream = window.MediaStream || window.webkitMediaStream;\n}\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n      window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n      get() {\n        return this._ontrack;\n      },\n      set(f) {\n        if (this._ontrack) {\n          this.removeEventListener('track', this._ontrack);\n        }\n        this.addEventListener('track', this._ontrack = f);\n      },\n      enumerable: true,\n      configurable: true\n    });\n    const origSetRemoteDescription =\n        window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        if (!this._ontrackpoly) {\n          this._ontrackpoly = (e) => {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', te => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === te.track.id);\n              } else {\n                receiver = {track: te.track};\n              }\n\n              const event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(track => {\n              let receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = this.getReceivers()\n                  .find(r => r.track && r.track.id === track.id);\n              } else {\n                receiver = {track};\n              }\n              const event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            });\n          };\n          this.addEventListener('addstream', this._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(this, arguments);\n      };\n  } else {\n    // even if RTCRtpTransceiver is in window, it is only used and\n    // emitted in unified-plan. Unfortunately this means we need\n    // to unconditionally wrap the event.\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      if (!e.transceiver) {\n        Object.defineProperty(e, 'transceiver',\n          {value: {receiver: e.receiver}});\n      }\n      return e;\n    });\n  }\n}\n\nexport function shimGetSendersWithDtmf(window) {\n  // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n  if (typeof window === 'object' && window.RTCPeerConnection &&\n      !('getSenders' in window.RTCPeerConnection.prototype) &&\n      'createDTMFSender' in window.RTCPeerConnection.prototype) {\n    const shimSenderWithDtmf = function(pc, track) {\n      return {\n        track,\n        get dtmf() {\n          if (this._dtmf === undefined) {\n            if (track.kind === 'audio') {\n              this._dtmf = pc.createDTMFSender(track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        },\n        _pc: pc\n      };\n    };\n\n    // augment addTrack when getSenders is not available.\n    if (!window.RTCPeerConnection.prototype.getSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        this._senders = this._senders || [];\n        return this._senders.slice(); // return a copy of the internal state.\n      };\n      const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addTrack =\n        function addTrack(track, stream) {\n          let sender = origAddTrack.apply(this, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(this, track);\n            this._senders.push(sender);\n          }\n          return sender;\n        };\n\n      const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n      window.RTCPeerConnection.prototype.removeTrack =\n        function removeTrack(sender) {\n          origRemoveTrack.apply(this, arguments);\n          const idx = this._senders.indexOf(sender);\n          if (idx !== -1) {\n            this._senders.splice(idx, 1);\n          }\n        };\n    }\n    const origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      this._senders = this._senders || [];\n      origAddStream.apply(this, [stream]);\n      stream.getTracks().forEach(track => {\n        this._senders.push(shimSenderWithDtmf(this, track));\n      });\n    };\n\n    const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        this._senders = this._senders || [];\n        origRemoveStream.apply(this, [stream]);\n\n        stream.getTracks().forEach(track => {\n          const sender = this._senders.find(s => s.track === track);\n          if (sender) { // remove sender\n            this._senders.splice(this._senders.indexOf(sender), 1);\n          }\n        });\n      };\n  } else if (typeof window === 'object' && window.RTCPeerConnection &&\n             'getSenders' in window.RTCPeerConnection.prototype &&\n             'createDTMFSender' in window.RTCPeerConnection.prototype &&\n             window.RTCRtpSender &&\n             !('dtmf' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = this._pc.createDTMFSender(this.track);\n          } else {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n}\n\nexport function shimGetStats(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n\n    // If selector is a function then we are in the old style stats so just\n    // pass back the original getStats format to avoid breaking old users.\n    if (arguments.length > 0 && typeof selector === 'function') {\n      return origGetStats.apply(this, arguments);\n    }\n\n    // When spec-style getStats is supported, return those when called with\n    // either no arguments or the selector argument is null.\n    if (origGetStats.length === 0 && (arguments.length === 0 ||\n        typeof selector !== 'function')) {\n      return origGetStats.apply(this, []);\n    }\n\n    const fixChromeStats_ = function(response) {\n      const standardReport = {};\n      const reports = response.result();\n      reports.forEach(report => {\n        const standardStats = {\n          id: report.id,\n          timestamp: report.timestamp,\n          type: {\n            localcandidate: 'local-candidate',\n            remotecandidate: 'remote-candidate'\n          }[report.type] || report.type\n        };\n        report.names().forEach(name => {\n          standardStats[name] = report.stat(name);\n        });\n        standardReport[standardStats.id] = standardStats;\n      });\n\n      return standardReport;\n    };\n\n    // shim getStats with maplike support\n    const makeMapStats = function(stats) {\n      return new Map(Object.keys(stats).map(key => [key, stats[key]]));\n    };\n\n    if (arguments.length >= 2) {\n      const successCallbackWrapper_ = function(response) {\n        onSucc(makeMapStats(fixChromeStats_(response)));\n      };\n\n      return origGetStats.apply(this, [successCallbackWrapper_,\n        selector]);\n    }\n\n    // promise-support\n    return new Promise((resolve, reject) => {\n      origGetStats.apply(this, [\n        function(response) {\n          resolve(makeMapStats(fixChromeStats_(response)));\n        }, reject]);\n    }).then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender && window.RTCRtpReceiver)) {\n    return;\n  }\n\n  // shim sender stats.\n  if (!('getStats' in window.RTCRtpSender.prototype)) {\n    const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n    if (origGetSenders) {\n      window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n        const senders = origGetSenders.apply(this, []);\n        senders.forEach(sender => sender._pc = this);\n        return senders;\n      };\n    }\n\n    const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n    if (origAddTrack) {\n      window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n        const sender = origAddTrack.apply(this, arguments);\n        sender._pc = this;\n        return sender;\n      };\n    }\n    window.RTCRtpSender.prototype.getStats = function getStats() {\n      const sender = this;\n      return this._pc.getStats().then(result =>\n        /* Note: this will include stats of all senders that\n         *   send a track with the same id as sender.track as\n         *   it is not possible to identify the RTCRtpSender.\n         */\n        utils.filterStats(result, sender.track, true));\n    };\n  }\n\n  // shim receiver stats.\n  if (!('getStats' in window.RTCRtpReceiver.prototype)) {\n    const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n    if (origGetReceivers) {\n      window.RTCPeerConnection.prototype.getReceivers =\n        function getReceivers() {\n          const receivers = origGetReceivers.apply(this, []);\n          receivers.forEach(receiver => receiver._pc = this);\n          return receivers;\n        };\n    }\n    utils.wrapPeerConnectionEvent(window, 'track', e => {\n      e.receiver._pc = e.srcElement;\n      return e;\n    });\n    window.RTCRtpReceiver.prototype.getStats = function getStats() {\n      const receiver = this;\n      return this._pc.getStats().then(result =>\n        utils.filterStats(result, receiver.track, false));\n    };\n  }\n\n  if (!('getStats' in window.RTCRtpSender.prototype &&\n      'getStats' in window.RTCRtpReceiver.prototype)) {\n    return;\n  }\n\n  // shim RTCPeerConnection.getStats(track).\n  const origGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    if (arguments.length > 0 &&\n        arguments[0] instanceof window.MediaStreamTrack) {\n      const track = arguments[0];\n      let sender;\n      let receiver;\n      let err;\n      this.getSenders().forEach(s => {\n        if (s.track === track) {\n          if (sender) {\n            err = true;\n          } else {\n            sender = s;\n          }\n        }\n      });\n      this.getReceivers().forEach(r => {\n        if (r.track === track) {\n          if (receiver) {\n            err = true;\n          } else {\n            receiver = r;\n          }\n        }\n        return r.track === track;\n      });\n      if (err || (sender && receiver)) {\n        return Promise.reject(new DOMException(\n          'There are more than one sender or receiver for the track.',\n          'InvalidAccessError'));\n      } else if (sender) {\n        return sender.getStats();\n      } else if (receiver) {\n        return receiver.getStats();\n      }\n      return Promise.reject(new DOMException(\n        'There is no sender or receiver for the track.',\n        'InvalidAccessError'));\n    }\n    return origGetStats.apply(this, arguments);\n  };\n}\n\nexport function shimAddTrackRemoveTrackWithNative(window) {\n  // shim addTrack/removeTrack with native variants in order to make\n  // the interactions with legacy getLocalStreams behave as in other browsers.\n  // Keeps a mapping stream.id => [stream, rtpsenders...]\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      return Object.keys(this._shimmedLocalStreams)\n        .map(streamId => this._shimmedLocalStreams[streamId][0]);\n    };\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (!stream) {\n        return origAddTrack.apply(this, arguments);\n      }\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n      const sender = origAddTrack.apply(this, arguments);\n      if (!this._shimmedLocalStreams[stream.id]) {\n        this._shimmedLocalStreams[stream.id] = [stream, sender];\n      } else if (this._shimmedLocalStreams[stream.id].indexOf(sender) === -1) {\n        this._shimmedLocalStreams[stream.id].push(sender);\n      }\n      return sender;\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    const existingSenders = this.getSenders();\n    origAddStream.apply(this, arguments);\n    const newSenders = this.getSenders()\n      .filter(newSender => existingSenders.indexOf(newSender) === -1);\n    this._shimmedLocalStreams[stream.id] = [stream].concat(newSenders);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      delete this._shimmedLocalStreams[stream.id];\n      return origRemoveStream.apply(this, arguments);\n    };\n\n  const origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      this._shimmedLocalStreams = this._shimmedLocalStreams || {};\n      if (sender) {\n        Object.keys(this._shimmedLocalStreams).forEach(streamId => {\n          const idx = this._shimmedLocalStreams[streamId].indexOf(sender);\n          if (idx !== -1) {\n            this._shimmedLocalStreams[streamId].splice(idx, 1);\n          }\n          if (this._shimmedLocalStreams[streamId].length === 1) {\n            delete this._shimmedLocalStreams[streamId];\n          }\n        });\n      }\n      return origRemoveTrack.apply(this, arguments);\n    };\n}\n\nexport function shimAddTrackRemoveTrack(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // shim addTrack and removeTrack.\n  if (window.RTCPeerConnection.prototype.addTrack &&\n      browserDetails.version >= 65) {\n    return shimAddTrackRemoveTrackWithNative(window);\n  }\n\n  // also shim pc.getLocalStreams when addTrack is shimmed\n  // to return the original streams.\n  const origGetLocalStreams = window.RTCPeerConnection.prototype\n      .getLocalStreams;\n  window.RTCPeerConnection.prototype.getLocalStreams =\n    function getLocalStreams() {\n      const nativeStreams = origGetLocalStreams.apply(this);\n      this._reverseStreams = this._reverseStreams || {};\n      return nativeStreams.map(stream => this._reverseStreams[stream.id]);\n    };\n\n  const origAddStream = window.RTCPeerConnection.prototype.addStream;\n  window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n    this._streams = this._streams || {};\n    this._reverseStreams = this._reverseStreams || {};\n\n    stream.getTracks().forEach(track => {\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n    });\n    // Add identity mapping for consistency with addTrack.\n    // Unless this is being used with a stream from addTrack.\n    if (!this._reverseStreams[stream.id]) {\n      const newStream = new window.MediaStream(stream.getTracks());\n      this._streams[stream.id] = newStream;\n      this._reverseStreams[newStream.id] = stream;\n      stream = newStream;\n    }\n    origAddStream.apply(this, [stream]);\n  };\n\n  const origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n\n      origRemoveStream.apply(this, [(this._streams[stream.id] || stream)]);\n      delete this._reverseStreams[(this._streams[stream.id] ?\n          this._streams[stream.id].id : stream.id)];\n      delete this._streams[stream.id];\n    };\n\n  window.RTCPeerConnection.prototype.addTrack =\n    function addTrack(track, stream) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      const streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(t => t === track)) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      const alreadyExists = this.getSenders().find(s => s.track === track);\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      this._streams = this._streams || {};\n      this._reverseStreams = this._reverseStreams || {};\n      const oldStream = this._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(() => {\n          this.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        const newStream = new window.MediaStream([track]);\n        this._streams[stream.id] = newStream;\n        this._reverseStreams[newStream.id] = stream;\n        this.addStream(newStream);\n      }\n      return this.getSenders().find(s => s.track === track);\n    };\n\n  // replace the internal stream id with the external one and\n  // vice versa.\n  function replaceInternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n          externalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  function replaceExternalStreamId(pc, description) {\n    let sdp = description.sdp;\n    Object.keys(pc._reverseStreams || []).forEach(internalId => {\n      const externalStream = pc._reverseStreams[internalId];\n      const internalStream = pc._streams[externalStream.id];\n      sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n          internalStream.id);\n    });\n    return new RTCSessionDescription({\n      type: description.type,\n      sdp\n    });\n  }\n  ['createOffer', 'createAnswer'].forEach(function(method) {\n    const nativeMethod = window.RTCPeerConnection.prototype[method];\n    const methodObj = {[method]() {\n      const args = arguments;\n      const isLegacyCall = arguments.length &&\n          typeof arguments[0] === 'function';\n      if (isLegacyCall) {\n        return nativeMethod.apply(this, [\n          (description) => {\n            const desc = replaceInternalStreamId(this, description);\n            args[0].apply(null, [desc]);\n          },\n          (err) => {\n            if (args[1]) {\n              args[1].apply(null, err);\n            }\n          }, arguments[2]\n        ]);\n      }\n      return nativeMethod.apply(this, arguments)\n      .then(description => replaceInternalStreamId(this, description));\n    }};\n    window.RTCPeerConnection.prototype[method] = methodObj[method];\n  });\n\n  const origSetLocalDescription =\n      window.RTCPeerConnection.prototype.setLocalDescription;\n  window.RTCPeerConnection.prototype.setLocalDescription =\n    function setLocalDescription() {\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(this, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(this, arguments[0]);\n      return origSetLocalDescription.apply(this, arguments);\n    };\n\n  // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n  const origLocalDescription = Object.getOwnPropertyDescriptor(\n      window.RTCPeerConnection.prototype, 'localDescription');\n  Object.defineProperty(window.RTCPeerConnection.prototype,\n      'localDescription', {\n        get() {\n          const description = origLocalDescription.get.apply(this);\n          if (description.type === '') {\n            return description;\n          }\n          return replaceInternalStreamId(this, description);\n        }\n      });\n\n  window.RTCPeerConnection.prototype.removeTrack =\n    function removeTrack(sender) {\n      if (this.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      const isLocal = sender._pc === this;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      this._streams = this._streams || {};\n      let stream;\n      Object.keys(this._streams).forEach(streamid => {\n        const hasTrack = this._streams[streamid].getTracks()\n          .find(track => sender.track === track);\n        if (hasTrack) {\n          stream = this._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          this.removeStream(this._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        this.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (!window.RTCPeerConnection && window.webkitRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.webkitRTCPeerConnection;\n  }\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n  if (browserDetails.version < 53) {\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n}\n\n// Attempt to fix ONN in plan-b mode.\nexport function fixNegotiationNeeded(window, browserDetails) {\n  utils.wrapPeerConnectionEvent(window, 'negotiationneeded', e => {\n    const pc = e.target;\n    if (browserDetails.version < 72 || (pc.getConfiguration &&\n        pc.getConfiguration().sdpSemantics === 'plan-b')) {\n      if (pc.signalingState !== 'stable') {\n        return;\n      }\n    }\n    return e;\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nimport * as utils from '../utils.js';\nconst logging = utils.log;\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n\n  if (!navigator.mediaDevices) {\n    return;\n  }\n\n  const constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    const cc = {};\n    Object.keys(c).forEach(key => {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      const r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      const oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        let oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(mix => {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  const shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      const remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      let face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      const getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        let matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(devices => {\n            devices = devices.filter(d => d.kind === 'videoinput');\n            let dev = devices.find(d => matches.some(match =>\n              d.label.toLowerCase().includes(match)));\n            if (!dev && devices.length && matches.includes('back')) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  const shimError_ = function(e) {\n    if (browserDetails.version >= 64) {\n      return e;\n    }\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        PermissionDismissedError: 'NotAllowedError',\n        InvalidStateError: 'NotAllowedError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotAllowedError',\n        MediaDeviceKillSwitchOn: 'NotAllowedError',\n        TabCaptureError: 'AbortError',\n        ScreenCaptureError: 'AbortError',\n        DeviceCaptureError: 'AbortError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint || e.constraintName,\n      toString() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  const getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, c => {\n      navigator.webkitGetUserMedia(c, onSuccess, e => {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n  navigator.getUserMedia = getUserMedia_.bind(navigator);\n\n  // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n  // function which returns a Promise, it does not accept spec-style\n  // constraints.\n  if (navigator.mediaDevices.getUserMedia) {\n    const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, c => origGetUserMedia(c).then(stream => {\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(track => {\n            track.stop();\n          });\n          throw new DOMException('', 'NotFoundError');\n        }\n        return stream;\n      }, e => Promise.reject(shimError_(e))));\n    };\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\nexport function shimGetDisplayMedia(window, getSourceId) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  // getSourceId is a function that returns a promise resolving with\n  // the sourceId of the screen/window/tab to be shared.\n  if (typeof getSourceId !== 'function') {\n    console.error('shimGetDisplayMedia: getSourceId argument is not ' +\n        'a function');\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      return getSourceId(constraints)\n        .then(sourceId => {\n          const widthSpecified = constraints.video && constraints.video.width;\n          const heightSpecified = constraints.video &&\n            constraints.video.height;\n          const frameRateSpecified = constraints.video &&\n            constraints.video.frameRate;\n          constraints.video = {\n            mandatory: {\n              chromeMediaSource: 'desktop',\n              chromeMediaSourceId: sourceId,\n              maxFrameRate: frameRateSpecified || 3\n            }\n          };\n          if (widthSpecified) {\n            constraints.video.mandatory.maxWidth = widthSpecified;\n          }\n          if (heightSpecified) {\n            constraints.video.mandatory.maxHeight = heightSpecified;\n          }\n          return window.navigator.mediaDevices.getUserMedia(constraints);\n        });\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nimport {filterIceServers} from './filtericeservers';\nimport shimRTCPeerConnection from 'rtcpeerconnection-shim';\n\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (window.RTCIceGatherer) {\n    if (!window.RTCIceCandidate) {\n      window.RTCIceCandidate = function RTCIceCandidate(args) {\n        return args;\n      };\n    }\n    if (!window.RTCSessionDescription) {\n      window.RTCSessionDescription = function RTCSessionDescription(args) {\n        return args;\n      };\n    }\n    // this adds an additional event listener to MediaStrackTrack that signals\n    // when a tracks enabled property was changed. Workaround for a bug in\n    // addStream, see below. No longer required in 15025+\n    if (browserDetails.version < 15025) {\n      const origMSTEnabled = Object.getOwnPropertyDescriptor(\n          window.MediaStreamTrack.prototype, 'enabled');\n      Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n        set(value) {\n          origMSTEnabled.set.call(this, value);\n          const ev = new Event('enabled');\n          ev.enabled = value;\n          this.dispatchEvent(ev);\n        }\n      });\n    }\n  }\n\n  // ORTC defines the DTMF sender a bit different.\n  // https://github.com/w3c/ortc/issues/714\n  if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n    Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n      get() {\n        if (this._dtmf === undefined) {\n          if (this.track.kind === 'audio') {\n            this._dtmf = new window.RTCDtmfSender(this);\n          } else if (this.track.kind === 'video') {\n            this._dtmf = null;\n          }\n        }\n        return this._dtmf;\n      }\n    });\n  }\n  // Edge currently only implements the RTCDtmfSender, not the\n  // RTCDTMFSender alias. See http://draft.ortc.org/#rtcdtmfsender2*\n  if (window.RTCDtmfSender && !window.RTCDTMFSender) {\n    window.RTCDTMFSender = window.RTCDtmfSender;\n  }\n\n  const RTCPeerConnectionShim = shimRTCPeerConnection(window,\n      browserDetails.version);\n  window.RTCPeerConnection = function RTCPeerConnection(config) {\n    if (config && config.iceServers) {\n      config.iceServers = filterIceServers(config.iceServers,\n        browserDetails.version);\n      utils.log('ICE servers after filtering:', config.iceServers);\n    }\n    return new RTCPeerConnectionShim(config);\n  };\n  window.RTCPeerConnection.prototype = RTCPeerConnectionShim.prototype;\n}\n\nexport function shimReplaceTrack(window) {\n  // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n  if (window.RTCRtpSender &&\n      !('replaceTrack' in window.RTCRtpSender.prototype)) {\n    window.RTCRtpSender.prototype.replaceTrack =\n        window.RTCRtpSender.prototype.setTrack;\n  }\n}\n", "/*\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  let hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(server => {\n    if (server && (server.urls || server.url)) {\n      let urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      const isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(url => {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n\n        const validTurn = url.startsWith('turn') &&\n            !url.startsWith('turn:[') &&\n            url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  const shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  const origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(e => Promise.reject(shimError_(e)));\n  };\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window) {\n  if (!('getDisplayMedia' in window.navigator)) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    window.navigator.getDisplayMedia.bind(window.navigator);\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\nexport {shimGetUserMedia} from './getusermedia';\nexport {shimGetDisplayMedia} from './getdisplaymedia';\n\nexport function shimOnTrack(window) {\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      ('receiver' in window.RTCTrackEvent.prototype) &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimPeerConnection(window, browserDetails) {\n  if (typeof window !== 'object' ||\n      !(window.RTCPeerConnection || window.mozRTCPeerConnection)) {\n    return; // probably media.peerconnection.enabled=false in about:config\n  }\n  if (!window.RTCPeerConnection && window.mozRTCPeerConnection) {\n    // very basic support for old versions.\n    window.RTCPeerConnection = window.mozRTCPeerConnection;\n  }\n\n  if (browserDetails.version < 53) {\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          const nativeMethod = window.RTCPeerConnection.prototype[method];\n          const methodObj = {[method]() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          }};\n          window.RTCPeerConnection.prototype[method] = methodObj[method];\n        });\n  }\n\n  const modernStatsTypes = {\n    inboundrtp: 'inbound-rtp',\n    outboundrtp: 'outbound-rtp',\n    candidatepair: 'candidate-pair',\n    localcandidate: 'local-candidate',\n    remotecandidate: 'remote-candidate'\n  };\n\n  const nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n  window.RTCPeerConnection.prototype.getStats = function getStats() {\n    const [selector, onSucc, onErr] = arguments;\n    return nativeGetStats.apply(this, [selector || null])\n      .then(stats => {\n        if (browserDetails.version < 53 && !onSucc) {\n          // Shim only promise getStats with spec-hyphens in type names\n          // Leave callback version alone; misc old uses of forEach before Map\n          try {\n            stats.forEach(stat => {\n              stat.type = modernStatsTypes[stat.type] || stat.type;\n            });\n          } catch (e) {\n            if (e.name !== 'TypeError') {\n              throw e;\n            }\n            // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n            stats.forEach((stat, i) => {\n              stats.set(i, Object.assign({}, stat, {\n                type: modernStatsTypes[stat.type] || stat.type\n              }));\n            });\n          }\n        }\n        return stats;\n      })\n      .then(onSucc, onErr);\n  };\n}\n\nexport function shimSenderGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpSender.prototype) {\n    return;\n  }\n  const origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n  if (origGetSenders) {\n    window.RTCPeerConnection.prototype.getSenders = function getSenders() {\n      const senders = origGetSenders.apply(this, []);\n      senders.forEach(sender => sender._pc = this);\n      return senders;\n    };\n  }\n\n  const origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n  if (origAddTrack) {\n    window.RTCPeerConnection.prototype.addTrack = function addTrack() {\n      const sender = origAddTrack.apply(this, arguments);\n      sender._pc = this;\n      return sender;\n    };\n  }\n  window.RTCRtpSender.prototype.getStats = function getStats() {\n    return this.track ? this._pc.getStats(this.track) :\n        Promise.resolve(new Map());\n  };\n}\n\nexport function shimReceiverGetStats(window) {\n  if (!(typeof window === 'object' && window.RTCPeerConnection &&\n      window.RTCRtpSender)) {\n    return;\n  }\n  if (window.RTCRtpSender && 'getStats' in window.RTCRtpReceiver.prototype) {\n    return;\n  }\n  const origGetReceivers = window.RTCPeerConnection.prototype.getReceivers;\n  if (origGetReceivers) {\n    window.RTCPeerConnection.prototype.getReceivers = function getReceivers() {\n      const receivers = origGetReceivers.apply(this, []);\n      receivers.forEach(receiver => receiver._pc = this);\n      return receivers;\n    };\n  }\n  utils.wrapPeerConnectionEvent(window, 'track', e => {\n    e.receiver._pc = e.srcElement;\n    return e;\n  });\n  window.RTCRtpReceiver.prototype.getStats = function getStats() {\n    return this._pc.getStats(this.track);\n  };\n}\n\nexport function shimRemoveStream(window) {\n  if (!window.RTCPeerConnection ||\n      'removeStream' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.removeStream =\n    function removeStream(stream) {\n      utils.deprecated('removeStream', 'removeTrack');\n      this.getSenders().forEach(sender => {\n        if (sender.track && stream.getTracks().includes(sender.track)) {\n          this.removeTrack(sender);\n        }\n      });\n    };\n}\n\nexport function shimRTCDataChannel(window) {\n  // rename DataChannel to RTCDataChannel (native fix in FF60):\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1173851\n  if (window.DataChannel && !window.RTCDataChannel) {\n    window.RTCDataChannel = window.DataChannel;\n  }\n}\n\nexport function shimAddTransceiver(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origAddTransceiver = window.RTCPeerConnection.prototype.addTransceiver;\n  if (origAddTransceiver) {\n    window.RTCPeerConnection.prototype.addTransceiver =\n      function addTransceiver() {\n        this.setParametersPromises = [];\n        const initParameters = arguments[1];\n        const shouldPerformCheck = initParameters &&\n                                  'sendEncodings' in initParameters;\n        if (shouldPerformCheck) {\n          // If sendEncodings params are provided, validate grammar\n          initParameters.sendEncodings.forEach((encodingParam) => {\n            if ('rid' in encodingParam) {\n              const ridRegex = /^[a-z0-9]{0,16}$/i;\n              if (!ridRegex.test(encodingParam.rid)) {\n                throw new TypeError('Invalid RID value provided.');\n              }\n            }\n            if ('scaleResolutionDownBy' in encodingParam) {\n              if (!(parseFloat(encodingParam.scaleResolutionDownBy) >= 1.0)) {\n                throw new RangeError('scale_resolution_down_by must be >= 1.0');\n              }\n            }\n            if ('maxFramerate' in encodingParam) {\n              if (!(parseFloat(encodingParam.maxFramerate) >= 0)) {\n                throw new RangeError('max_framerate must be >= 0.0');\n              }\n            }\n          });\n        }\n        const transceiver = origAddTransceiver.apply(this, arguments);\n        if (shouldPerformCheck) {\n          // Check if the init options were applied. If not we do this in an\n          // asynchronous way and save the promise reference in a global object.\n          // This is an ugly hack, but at the same time is way more robust than\n          // checking the sender parameters before and after the createOffer\n          // Also note that after the createoffer we are not 100% sure that\n          // the params were asynchronously applied so we might miss the\n          // opportunity to recreate offer.\n          const {sender} = transceiver;\n          const params = sender.getParameters();\n          if (!('encodings' in params) ||\n              // Avoid being fooled by patched getParameters() below.\n              (params.encodings.length === 1 &&\n               Object.keys(params.encodings[0]).length === 0)) {\n            params.encodings = initParameters.sendEncodings;\n            sender.sendEncodings = initParameters.sendEncodings;\n            this.setParametersPromises.push(sender.setParameters(params)\n              .then(() => {\n                delete sender.sendEncodings;\n              }).catch(() => {\n                delete sender.sendEncodings;\n              })\n            );\n          }\n        }\n        return transceiver;\n      };\n  }\n}\n\nexport function shimGetParameters(window) {\n  if (!(typeof window === 'object' && window.RTCRtpSender)) {\n    return;\n  }\n  const origGetParameters = window.RTCRtpSender.prototype.getParameters;\n  if (origGetParameters) {\n    window.RTCRtpSender.prototype.getParameters =\n      function getParameters() {\n        const params = origGetParameters.apply(this, arguments);\n        if (!('encodings' in params)) {\n          params.encodings = [].concat(this.sendEncodings || [{}]);\n        }\n        return params;\n      };\n  }\n}\n\nexport function shimCreateOffer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer = function createOffer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateOffer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateOffer.apply(this, arguments);\n  };\n}\n\nexport function shimCreateAnswer(window) {\n  // https://github.com/webrtcHacks/adapter/issues/998#issuecomment-516921647\n  // Firefox ignores the init sendEncodings options passed to addTransceiver\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1396918\n  if (!(typeof window === 'object' && window.RTCPeerConnection)) {\n    return;\n  }\n  const origCreateAnswer = window.RTCPeerConnection.prototype.createAnswer;\n  window.RTCPeerConnection.prototype.createAnswer = function createAnswer() {\n    if (this.setParametersPromises && this.setParametersPromises.length) {\n      return Promise.all(this.setParametersPromises)\n      .then(() => {\n        return origCreateAnswer.apply(this, arguments);\n      })\n      .finally(() => {\n        this.setParametersPromises = [];\n      });\n    }\n    return origCreateAnswer.apply(this, arguments);\n  };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n\nexport function shimGetUserMedia(window, browserDetails) {\n  const navigator = window && window.navigator;\n  const MediaStreamTrack = window && window.MediaStreamTrack;\n\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    const remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    const nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      const nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        const obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      const nativeApplyConstraints =\n        MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n}\n", "/*\n *  Copyright (c) 2018 The adapter.js project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nexport function shimGetDisplayMedia(window, preferredMediaSource) {\n  if (window.navigator.mediaDevices &&\n    'getDisplayMedia' in window.navigator.mediaDevices) {\n    return;\n  }\n  if (!(window.navigator.mediaDevices)) {\n    return;\n  }\n  window.navigator.mediaDevices.getDisplayMedia =\n    function getDisplayMedia(constraints) {\n      if (!(constraints && constraints.video)) {\n        const err = new DOMException('getDisplayMedia without video ' +\n            'constraints is undefined');\n        err.name = 'NotFoundError';\n        // from https://heycam.github.io/webidl/#idl-DOMException-error-names\n        err.code = 8;\n        return Promise.reject(err);\n      }\n      if (constraints.video === true) {\n        constraints.video = {mediaSource: preferredMediaSource};\n      } else {\n        constraints.video.mediaSource = preferredMediaSource;\n      }\n      return window.navigator.mediaDevices.getUserMedia(constraints);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nimport * as utils from '../utils';\n\nexport function shimLocalStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getLocalStreams =\n      function getLocalStreams() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n  }\n  if (!('addStream' in window.RTCPeerConnection.prototype)) {\n    const _addTrack = window.RTCPeerConnection.prototype.addTrack;\n    window.RTCPeerConnection.prototype.addStream = function addStream(stream) {\n      if (!this._localStreams) {\n        this._localStreams = [];\n      }\n      if (!this._localStreams.includes(stream)) {\n        this._localStreams.push(stream);\n      }\n      // Try to emulate Chrome's behaviour of adding in audio-video order.\n      // Safari orders by track id.\n      stream.getAudioTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n      stream.getVideoTracks().forEach(track => _addTrack.call(this, track,\n        stream));\n    };\n\n    window.RTCPeerConnection.prototype.addTrack =\n      function addTrack(track, ...streams) {\n        if (streams) {\n          streams.forEach((stream) => {\n            if (!this._localStreams) {\n              this._localStreams = [stream];\n            } else if (!this._localStreams.includes(stream)) {\n              this._localStreams.push(stream);\n            }\n          });\n        }\n        return _addTrack.apply(this, arguments);\n      };\n  }\n  if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.removeStream =\n      function removeStream(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        const index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        const tracks = stream.getTracks();\n        this.getSenders().forEach(sender => {\n          if (tracks.includes(sender.track)) {\n            this.removeTrack(sender);\n          }\n        });\n      };\n  }\n}\n\nexport function shimRemoteStreamsAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n    window.RTCPeerConnection.prototype.getRemoteStreams =\n      function getRemoteStreams() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n  }\n  if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n      get() {\n        return this._onaddstream;\n      },\n      set(f) {\n        if (this._onaddstream) {\n          this.removeEventListener('addstream', this._onaddstream);\n          this.removeEventListener('track', this._onaddstreampoly);\n        }\n        this.addEventListener('addstream', this._onaddstream = f);\n        this.addEventListener('track', this._onaddstreampoly = (e) => {\n          e.streams.forEach(stream => {\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.includes(stream)) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            const event = new Event('addstream');\n            event.stream = stream;\n            this.dispatchEvent(event);\n          });\n        });\n      }\n    });\n    const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n    window.RTCPeerConnection.prototype.setRemoteDescription =\n      function setRemoteDescription() {\n        const pc = this;\n        if (!this._onaddstreampoly) {\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            e.streams.forEach(stream => {\n              if (!pc._remoteStreams) {\n                pc._remoteStreams = [];\n              }\n              if (pc._remoteStreams.indexOf(stream) >= 0) {\n                return;\n              }\n              pc._remoteStreams.push(stream);\n              const event = new Event('addstream');\n              event.stream = stream;\n              pc.dispatchEvent(event);\n            });\n          });\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n  }\n}\n\nexport function shimCallbacksAPI(window) {\n  if (typeof window !== 'object' || !window.RTCPeerConnection) {\n    return;\n  }\n  const prototype = window.RTCPeerConnection.prototype;\n  const origCreateOffer = prototype.createOffer;\n  const origCreateAnswer = prototype.createAnswer;\n  const setLocalDescription = prototype.setLocalDescription;\n  const setRemoteDescription = prototype.setRemoteDescription;\n  const addIceCandidate = prototype.addIceCandidate;\n\n  prototype.createOffer =\n    function createOffer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  prototype.createAnswer =\n    function createAnswer(successCallback, failureCallback) {\n      const options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      const promise = origCreateAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n  let withCallback = function(description, successCallback, failureCallback) {\n    const promise = setLocalDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setLocalDescription = withCallback;\n\n  withCallback = function(description, successCallback, failureCallback) {\n    const promise = setRemoteDescription.apply(this, [description]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.setRemoteDescription = withCallback;\n\n  withCallback = function(candidate, successCallback, failureCallback) {\n    const promise = addIceCandidate.apply(this, [candidate]);\n    if (!failureCallback) {\n      return promise;\n    }\n    promise.then(successCallback, failureCallback);\n    return Promise.resolve();\n  };\n  prototype.addIceCandidate = withCallback;\n}\n\nexport function shimGetUserMedia(window) {\n  const navigator = window && window.navigator;\n\n  if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n    // shim not needed in Safari 12.1\n    const mediaDevices = navigator.mediaDevices;\n    const _getUserMedia = mediaDevices.getUserMedia.bind(mediaDevices);\n    navigator.mediaDevices.getUserMedia = (constraints) => {\n      return _getUserMedia(shimConstraints(constraints));\n    };\n  }\n\n  if (!navigator.getUserMedia && navigator.mediaDevices &&\n    navigator.mediaDevices.getUserMedia) {\n    navigator.getUserMedia = function getUserMedia(constraints, cb, errcb) {\n      navigator.mediaDevices.getUserMedia(constraints)\n      .then(cb, errcb);\n    }.bind(navigator);\n  }\n}\n\nexport function shimConstraints(constraints) {\n  if (constraints && constraints.video !== undefined) {\n    return Object.assign({},\n      constraints,\n      {video: utils.compactObject(constraints.video)}\n    );\n  }\n\n  return constraints;\n}\n\nexport function shimRTCIceServerUrls(window) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n  const OrigPeerConnection = window.RTCPeerConnection;\n  window.RTCPeerConnection =\n    function RTCPeerConnection(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        const newIceServers = [];\n        for (let i = 0; i < pcConfig.iceServers.length; i++) {\n          let server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n  window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n  // wrap static methods. Currently just generateCertificate.\n  if ('generateCertificate' in OrigPeerConnection) {\n    Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n      get() {\n        return OrigPeerConnection.generateCertificate;\n      }\n    });\n  }\n}\n\nexport function shimTrackEventTransceiver(window) {\n  // Add event.transceiver member over deprecated event.receiver\n  if (typeof window === 'object' && window.RTCTrackEvent &&\n      'receiver' in window.RTCTrackEvent.prototype &&\n      !('transceiver' in window.RTCTrackEvent.prototype)) {\n    Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n      get() {\n        return {receiver: this.receiver};\n      }\n    });\n  }\n}\n\nexport function shimCreateOfferLegacy(window) {\n  const origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n  window.RTCPeerConnection.prototype.createOffer =\n    function createOffer(offerOptions) {\n      if (offerOptions) {\n        if (typeof offerOptions.offerToReceiveAudio !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveAudio =\n            !!offerOptions.offerToReceiveAudio;\n        }\n        const audioTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'audio');\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('sendonly');\n            } else {\n              audioTransceiver.direction = 'sendonly';\n            }\n          } else if (audioTransceiver.direction === 'recvonly') {\n            if (audioTransceiver.setDirection) {\n              audioTransceiver.setDirection('inactive');\n            } else {\n              audioTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          this.addTransceiver('audio');\n        }\n\n        if (typeof offerOptions.offerToReceiveVideo !== 'undefined') {\n          // support bit values\n          offerOptions.offerToReceiveVideo =\n            !!offerOptions.offerToReceiveVideo;\n        }\n        const videoTransceiver = this.getTransceivers().find(transceiver =>\n          transceiver.receiver.track.kind === 'video');\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('sendonly');\n            } else {\n              videoTransceiver.direction = 'sendonly';\n            }\n          } else if (videoTransceiver.direction === 'recvonly') {\n            if (videoTransceiver.setDirection) {\n              videoTransceiver.setDirection('inactive');\n            } else {\n              videoTransceiver.direction = 'inactive';\n            }\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          this.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(this, arguments);\n    };\n}\n\nexport function shimAudioContext(window) {\n  if (typeof window !== 'object' || window.AudioContext) {\n    return;\n  }\n  window.AudioContext = window.webkitAudioContext;\n}\n", "/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n'use strict';\n\nimport SDPUtils from 'sdp';\nimport * as utils from './utils';\n\nexport function shimRTCIceCandidate(window) {\n  // foundation is arbitrarily chosen as an indicator for full support for\n  // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n  if (!window.RTCIceCandidate || (window.RTCIceCandidate && 'foundation' in\n      window.RTCIceCandidate.prototype)) {\n    return;\n  }\n\n  const NativeRTCIceCandidate = window.RTCIceCandidate;\n  window.RTCIceCandidate = function RTCIceCandidate(args) {\n    // Remove the a= which shouldn't be part of the candidate string.\n    if (typeof args === 'object' && args.candidate &&\n        args.candidate.indexOf('a=') === 0) {\n      args = JSON.parse(JSON.stringify(args));\n      args.candidate = args.candidate.substr(2);\n    }\n\n    if (args.candidate && args.candidate.length) {\n      // Augment the native candidate with the parsed fields.\n      const nativeCandidate = new NativeRTCIceCandidate(args);\n      const parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      const augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function toJSON() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    }\n    return new NativeRTCIceCandidate(args);\n  };\n  window.RTCIceCandidate.prototype = NativeRTCIceCandidate.prototype;\n\n  // Hook up the augmented candidate in onicecandidate and\n  // addEventListener('icecandidate', ...)\n  utils.wrapPeerConnectionEvent(window, 'icecandidate', e => {\n    if (e.candidate) {\n      Object.defineProperty(e, 'candidate', {\n        value: new window.RTCIceCandidate(e.candidate),\n        writable: 'false'\n      });\n    }\n    return e;\n  });\n}\n\nexport function shimMaxMessageSize(window, browserDetails) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n\n  if (!('sctp' in window.RTCPeerConnection.prototype)) {\n    Object.defineProperty(window.RTCPeerConnection.prototype, 'sctp', {\n      get() {\n        return typeof this._sctp === 'undefined' ? null : this._sctp;\n      }\n    });\n  }\n\n  const sctpInDescription = function(description) {\n    if (!description || !description.sdp) {\n      return false;\n    }\n    const sections = SDPUtils.splitSections(description.sdp);\n    sections.shift();\n    return sections.some(mediaSection => {\n      const mLine = SDPUtils.parseMLine(mediaSection);\n      return mLine && mLine.kind === 'application'\n          && mLine.protocol.indexOf('SCTP') !== -1;\n    });\n  };\n\n  const getRemoteFirefoxVersion = function(description) {\n    // TODO: Is there a better solution for detecting Firefox?\n    const match = description.sdp.match(/mozilla...THIS_IS_SDPARTA-(\\d+)/);\n    if (match === null || match.length < 2) {\n      return -1;\n    }\n    const version = parseInt(match[1], 10);\n    // Test for NaN (yes, this is ugly)\n    return version !== version ? -1 : version;\n  };\n\n  const getCanSendMaxMessageSize = function(remoteIsFirefox) {\n    // Every implementation we know can send at least 64 KiB.\n    // Note: Although Chrome is technically able to send up to 256 KiB, the\n    //       data does not reach the other peer reliably.\n    //       See: https://bugs.chromium.org/p/webrtc/issues/detail?id=8419\n    let canSendMaxMessageSize = 65536;\n    if (browserDetails.browser === 'firefox') {\n      if (browserDetails.version < 57) {\n        if (remoteIsFirefox === -1) {\n          // FF < 57 will send in 16 KiB chunks using the deprecated PPID\n          // fragmentation.\n          canSendMaxMessageSize = 16384;\n        } else {\n          // However, other FF (and RAWRTC) can reassemble PPID-fragmented\n          // messages. Thus, supporting ~2 GiB when sending.\n          canSendMaxMessageSize = 2147483637;\n        }\n      } else if (browserDetails.version < 60) {\n        // Currently, all FF >= 57 will reset the remote maximum message size\n        // to the default value when a data channel is created at a later\n        // stage. :(\n        // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n        canSendMaxMessageSize =\n          browserDetails.version === 57 ? 65535 : 65536;\n      } else {\n        // FF >= 60 supports sending ~2 GiB\n        canSendMaxMessageSize = 2147483637;\n      }\n    }\n    return canSendMaxMessageSize;\n  };\n\n  const getMaxMessageSize = function(description, remoteIsFirefox) {\n    // Note: 65536 bytes is the default value from the SDP spec. Also,\n    //       every implementation we know supports receiving 65536 bytes.\n    let maxMessageSize = 65536;\n\n    // FF 57 has a slightly incorrect default remote max message size, so\n    // we need to adjust it here to avoid a failure when sending.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1425697\n    if (browserDetails.browser === 'firefox'\n         && browserDetails.version === 57) {\n      maxMessageSize = 65535;\n    }\n\n    const match = SDPUtils.matchPrefix(description.sdp,\n      'a=max-message-size:');\n    if (match.length > 0) {\n      maxMessageSize = parseInt(match[0].substr(19), 10);\n    } else if (browserDetails.browser === 'firefox' &&\n                remoteIsFirefox !== -1) {\n      // If the maximum message size is not present in the remote SDP and\n      // both local and remote are Firefox, the remote peer can receive\n      // ~2 GiB.\n      maxMessageSize = 2147483637;\n    }\n    return maxMessageSize;\n  };\n\n  const origSetRemoteDescription =\n      window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n    function setRemoteDescription() {\n      this._sctp = null;\n      // Chrome decided to not expose .sctp in plan-b mode.\n      // As usual, adapter.js has to do an 'ugly worakaround'\n      // to cover up the mess.\n      if (browserDetails.browser === 'chrome' && browserDetails.version >= 76) {\n        const {sdpSemantics} = this.getConfiguration();\n        if (sdpSemantics === 'plan-b') {\n          Object.defineProperty(this, 'sctp', {\n            get() {\n              return typeof this._sctp === 'undefined' ? null : this._sctp;\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n      }\n\n      if (sctpInDescription(arguments[0])) {\n        // Check if the remote is FF.\n        const isFirefox = getRemoteFirefoxVersion(arguments[0]);\n\n        // Get the maximum message size the local peer is capable of sending\n        const canSendMMS = getCanSendMaxMessageSize(isFirefox);\n\n        // Get the maximum message size of the remote peer.\n        const remoteMMS = getMaxMessageSize(arguments[0], isFirefox);\n\n        // Determine final maximum message size\n        let maxMessageSize;\n        if (canSendMMS === 0 && remoteMMS === 0) {\n          maxMessageSize = Number.POSITIVE_INFINITY;\n        } else if (canSendMMS === 0 || remoteMMS === 0) {\n          maxMessageSize = Math.max(canSendMMS, remoteMMS);\n        } else {\n          maxMessageSize = Math.min(canSendMMS, remoteMMS);\n        }\n\n        // Create a dummy RTCSctpTransport object and the 'maxMessageSize'\n        // attribute.\n        const sctp = {};\n        Object.defineProperty(sctp, 'maxMessageSize', {\n          get() {\n            return maxMessageSize;\n          }\n        });\n        this._sctp = sctp;\n      }\n\n      return origSetRemoteDescription.apply(this, arguments);\n    };\n}\n\nexport function shimSendThrowTypeError(window) {\n  if (!(window.RTCPeerConnection &&\n      'createDataChannel' in window.RTCPeerConnection.prototype)) {\n    return;\n  }\n\n  // Note: Although Firefox >= 57 has a native implementation, the maximum\n  //       message size can be reset for all data channels at a later stage.\n  //       See: https://bugzilla.mozilla.org/show_bug.cgi?id=1426831\n\n  function wrapDcSend(dc, pc) {\n    const origDataChannelSend = dc.send;\n    dc.send = function send() {\n      const data = arguments[0];\n      const length = data.length || data.size || data.byteLength;\n      if (dc.readyState === 'open' &&\n          pc.sctp && length > pc.sctp.maxMessageSize) {\n        throw new TypeError('Message too large (can send a maximum of ' +\n          pc.sctp.maxMessageSize + ' bytes)');\n      }\n      return origDataChannelSend.apply(dc, arguments);\n    };\n  }\n  const origCreateDataChannel =\n    window.RTCPeerConnection.prototype.createDataChannel;\n  window.RTCPeerConnection.prototype.createDataChannel =\n    function createDataChannel() {\n      const dataChannel = origCreateDataChannel.apply(this, arguments);\n      wrapDcSend(dataChannel, this);\n      return dataChannel;\n    };\n  utils.wrapPeerConnectionEvent(window, 'datachannel', e => {\n    wrapDcSend(e.channel, e.target);\n    return e;\n  });\n}\n\n\n/* shims RTCConnectionState by pretending it is the same as iceConnectionState.\n * See https://bugs.chromium.org/p/webrtc/issues/detail?id=6145#c12\n * for why this is a valid hack in Chrome. In Firefox it is slightly incorrect\n * since DTLS failures would be hidden. See\n * https://bugzilla.mozilla.org/show_bug.cgi?id=1265827\n * for the Firefox tracking bug.\n */\nexport function shimConnectionState(window) {\n  if (!window.RTCPeerConnection ||\n      'connectionState' in window.RTCPeerConnection.prototype) {\n    return;\n  }\n  const proto = window.RTCPeerConnection.prototype;\n  Object.defineProperty(proto, 'connectionState', {\n    get() {\n      return {\n        completed: 'connected',\n        checking: 'connecting'\n      }[this.iceConnectionState] || this.iceConnectionState;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(proto, 'onconnectionstatechange', {\n    get() {\n      return this._onconnectionstatechange || null;\n    },\n    set(cb) {\n      if (this._onconnectionstatechange) {\n        this.removeEventListener('connectionstatechange',\n            this._onconnectionstatechange);\n        delete this._onconnectionstatechange;\n      }\n      if (cb) {\n        this.addEventListener('connectionstatechange',\n            this._onconnectionstatechange = cb);\n      }\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  ['setLocalDescription', 'setRemoteDescription'].forEach((method) => {\n    const origMethod = proto[method];\n    proto[method] = function() {\n      if (!this._connectionstatechangepoly) {\n        this._connectionstatechangepoly = e => {\n          const pc = e.target;\n          if (pc._lastConnectionState !== pc.connectionState) {\n            pc._lastConnectionState = pc.connectionState;\n            const newEvent = new Event('connectionstatechange', e);\n            pc.dispatchEvent(newEvent);\n          }\n          return e;\n        };\n        this.addEventListener('iceconnectionstatechange',\n          this._connectionstatechangepoly);\n      }\n      return origMethod.apply(this, arguments);\n    };\n  });\n}\n\nexport function removeExtmapAllowMixed(window, browserDetails) {\n  /* remove a=extmap-allow-mixed for webrtc.org < M71 */\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  if (browserDetails.browser === 'chrome' && browserDetails.version >= 71) {\n    return;\n  }\n  if (browserDetails.browser === 'safari' && browserDetails.version >= 605) {\n    return;\n  }\n  const nativeSRD = window.RTCPeerConnection.prototype.setRemoteDescription;\n  window.RTCPeerConnection.prototype.setRemoteDescription =\n  function setRemoteDescription(desc) {\n    if (desc && desc.sdp && desc.sdp.indexOf('\\na=extmap-allow-mixed') !== -1) {\n      const sdp = desc.sdp.split('\\n').filter((line) => {\n        return line.trim() !== 'a=extmap-allow-mixed';\n      }).join('\\n');\n      // Safari enforces read-only-ness of RTCSessionDescription fields.\n      if (window.RTCSessionDescription &&\n          desc instanceof window.RTCSessionDescription) {\n        arguments[0] = new window.RTCSessionDescription({\n          type: desc.type,\n          sdp,\n        });\n      } else {\n        desc.sdp = sdp;\n      }\n    }\n    return nativeSRD.apply(this, arguments);\n  };\n}\n\nexport function shimAddIceCandidateNullOrEmpty(window, browserDetails) {\n  // Support for addIceCandidate(null or undefined)\n  // as well as addIceCandidate({candidate: \"\", ...})\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=978582\n  // Note: must be called before other polyfills which change the signature.\n  if (!(window.RTCPeerConnection && window.RTCPeerConnection.prototype)) {\n    return;\n  }\n  const nativeAddIceCandidate =\n      window.RTCPeerConnection.prototype.addIceCandidate;\n  if (!nativeAddIceCandidate || nativeAddIceCandidate.length === 0) {\n    return;\n  }\n  window.RTCPeerConnection.prototype.addIceCandidate =\n    function addIceCandidate() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      // Firefox 68+ emits and processes {candidate: \"\", ...}, ignore\n      // in older versions.\n      // Native support for ignoring exists for Chrome M77+.\n      // Safari ignores as well, exact version unknown but works in the same\n      // version that also ignores addIceCandidate(null).\n      if (((browserDetails.browser === 'chrome' && browserDetails.version < 78)\n           || (browserDetails.browser === 'firefox'\n               && browserDetails.version < 68)\n           || (browserDetails.browser === 'safari'))\n          && arguments[0] && arguments[0].candidate === '') {\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\nimport * as utils from './utils';\n\n  // Browser shims.\nimport * as chromeShim from './chrome/chrome_shim';\nimport * as edgeShim from './edge/edge_shim';\nimport * as firefoxShim from './firefox/firefox_shim';\nimport * as safariShim from './safari/safari_shim';\nimport * as commonShim from './common_shim';\n\n// Shimming starts here.\nexport function adapterFactory({window} = {}, options = {\n  shimChrome: true,\n  shimFirefox: true,\n  shimEdge: true,\n  shimSafari: true,\n}) {\n  // Utils.\n  const logging = utils.log;\n  const browserDetails = utils.detectBrowser(window);\n\n  const adapter = {\n    browserDetails,\n    commonShim,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      if (browserDetails.version === null) {\n        logging('Chrome shim can not determine version, not shimming.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      chromeShim.shimGetUserMedia(window, browserDetails);\n      chromeShim.shimMediaStream(window, browserDetails);\n      chromeShim.shimPeerConnection(window, browserDetails);\n      chromeShim.shimOnTrack(window, browserDetails);\n      chromeShim.shimAddTrackRemoveTrack(window, browserDetails);\n      chromeShim.shimGetSendersWithDtmf(window, browserDetails);\n      chromeShim.shimGetStats(window, browserDetails);\n      chromeShim.shimSenderReceiverGetStats(window, browserDetails);\n      chromeShim.fixNegotiationNeeded(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n\n      // Must be called before shimPeerConnection.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      firefoxShim.shimGetUserMedia(window, browserDetails);\n      firefoxShim.shimPeerConnection(window, browserDetails);\n      firefoxShim.shimOnTrack(window, browserDetails);\n      firefoxShim.shimRemoveStream(window, browserDetails);\n      firefoxShim.shimSenderGetStats(window, browserDetails);\n      firefoxShim.shimReceiverGetStats(window, browserDetails);\n      firefoxShim.shimRTCDataChannel(window, browserDetails);\n      firefoxShim.shimAddTransceiver(window, browserDetails);\n      firefoxShim.shimGetParameters(window, browserDetails);\n      firefoxShim.shimCreateOffer(window, browserDetails);\n      firefoxShim.shimCreateAnswer(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimConnectionState(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n\n      edgeShim.shimGetUserMedia(window, browserDetails);\n      edgeShim.shimGetDisplayMedia(window, browserDetails);\n      edgeShim.shimPeerConnection(window, browserDetails);\n      edgeShim.shimReplaceTrack(window, browserDetails);\n\n      // the edge shim implements the full RTCIceCandidate object.\n\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n\n      // Must be called before shimCallbackAPI.\n      commonShim.shimAddIceCandidateNullOrEmpty(window, browserDetails);\n\n      safariShim.shimRTCIceServerUrls(window, browserDetails);\n      safariShim.shimCreateOfferLegacy(window, browserDetails);\n      safariShim.shimCallbacksAPI(window, browserDetails);\n      safariShim.shimLocalStreamsAPI(window, browserDetails);\n      safariShim.shimRemoteStreamsAPI(window, browserDetails);\n      safariShim.shimTrackEventTransceiver(window, browserDetails);\n      safariShim.shimGetUserMedia(window, browserDetails);\n      safariShim.shimAudioContext(window, browserDetails);\n\n      commonShim.shimRTCIceCandidate(window, browserDetails);\n      commonShim.shimMaxMessageSize(window, browserDetails);\n      commonShim.shimSendThrowTypeError(window, browserDetails);\n      commonShim.removeExtmapAllowMixed(window, browserDetails);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n}\n", "/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n/* eslint-env node */\n\n'use strict';\n\nimport {adapterFactory} from './adapter_factory.js';\n\nconst adapter =\n  adapterFactory({window: typeof window === 'undefined' ? undefined : window});\nexport default adapter;\n", "import { webRTCAdapter } from './adapter';\n\nexport const Supports = new class {\n  readonly isIOS = ['iPad', 'iPhone', 'iPod'].includes(navigator.platform);\n  readonly supportedBrowsers = ['firefox', 'chrome', 'safari'];\n\n  readonly minFirefoxVersion = 59;\n  readonly minChromeVersion = 72;\n  readonly minSafariVersion = 605;\n\n  isWebRTCSupported(): boolean {\n    return typeof RTCPeerConnection !== 'undefined';\n  }\n\n  isBrowserSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = this.getVersion();\n\n    const validBrowser = this.supportedBrowsers.includes(browser);\n\n    if (!validBrowser) return false;\n\n    if (browser === 'chrome') return version >= this.minChromeVersion;\n    if (browser === 'firefox') return version >= this.minFirefoxVersion;\n    if (browser === 'safari') return !this.isIOS && version >= this.minSafariVersion;\n\n    return false;\n  }\n\n  getBrowser(): string {\n    return webRTCAdapter.browserDetails.browser;\n  }\n\n  getVersion(): number {\n    return webRTCAdapter.browserDetails.version || 0;\n  }\n\n  isUnifiedPlanSupported(): boolean {\n    const browser = this.getBrowser();\n    const version = webRTCAdapter.browserDetails.version || 0;\n\n    if (browser === 'chrome' && version < 72) return false;\n    if (browser === 'firefox' && version >= 59) return true;\n    if (!window.RTCRtpTransceiver || !('currentDirection' in RTCRtpTransceiver.prototype)) return false;\n\n    let tempPc: RTCPeerConnection;\n    let supported = false;\n\n    try {\n      tempPc = new RTCPeerConnection();\n      tempPc.addTransceiver('audio');\n      supported = true;\n    } catch (e) { }\n    finally {\n      if (tempPc) {\n        tempPc.close();\n      }\n    }\n\n    return supported;\n  }\n\n  toString(): string {\n    return `Supports: \n    browser:${this.getBrowser()} \n    version:${this.getVersion()} \n    isIOS:${this.isIOS} \n    isWebRTCSupported:${this.isWebRTCSupported()} \n    isBrowserSupported:${this.isBrowserSupported()} \n    isUnifiedPlanSupported:${this.isUnifiedPlanSupported()}`;\n  }\n}", "import { EventEmitter } from \"eventemitter3\";\nimport { util } from \"./util\";\nimport logger, { LogLevel } from \"./logger\";\nimport { Socket } from \"./socket\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport {\n  ConnectionType,\n  PeerErrorType,\n  PeerEventType,\n  SocketEventType,\n  ServerMessageType\n} from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { API } from \"./api\";\nimport { PeerConnectOption, PeerJSOption } from \"..\";\n\nclass PeerOptions implements PeerJSOption {\n  debug?: LogLevel; // 1: Errors, 2: Warnings, 3: All logs\n  host?: string;\n  port?: number;\n  path?: string;\n  key?: string;\n  token?: string;\n  config?: any;\n  secure?: boolean;\n  pingInterval?: number;\n  logFunction?: (logLevel: LogLevel, ...rest: any[]) => void;\n}\n\n/**\n * A peer who can initiate connections with other peers.\n */\nexport class Peer extends EventEmitter {\n  private static readonly DEFAULT_KEY = \"peerjs\";\n\n  private readonly _options: PeerOptions;\n  private readonly _api: API;\n  private readonly _socket: Socket;\n\n  private _id: string | null = null;\n  private _lastServerId: string | null = null;\n\n  // States.\n  private _destroyed = false; // Connections have been killed\n  private _disconnected = false; // Connection to PeerServer killed but P2P connections still active\n  private _open = false; // Sockets and such are not yet open.\n  private readonly _connections: Map<string, BaseConnection[]> = new Map(); // All connections for this peer.\n  private readonly _lostMessages: Map<string, ServerMessage[]> = new Map(); // src => [list of messages]\n\n  get id() {\n    return this._id;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  get open() {\n    return this._open;\n  }\n\n  get socket() {\n    return this._socket;\n  }\n\n  /**\n   * @deprecated \n   * Return type will change from Object to Map<string,[]> \n   */\n  get connections(): Object {\n    const plainConnections = Object.create(null);\n\n    for (let [k, v] of this._connections) {\n      plainConnections[k] = v;\n    }\n\n    return plainConnections;\n  }\n\n  get destroyed() {\n    return this._destroyed;\n  }\n  get disconnected() {\n    return this._disconnected;\n  }\n\n  constructor(id?: string | PeerOptions, options?: PeerOptions) {\n    super();\n\n    let userId: string | undefined;\n\n    // Deal with overloading\n    if (id && id.constructor == Object) {\n      options = id as PeerOptions;\n    } else if (id) {\n      userId = id.toString();\n    }\n\n    // Configurize options\n    options = {\n      debug: 0, // 1: Errors, 2: Warnings, 3: All logs\n      host: util.CLOUD_HOST,\n      port: util.CLOUD_PORT,\n      path: \"/\",\n      key: Peer.DEFAULT_KEY,\n      token: util.randomToken(),\n      config: util.defaultConfig,\n      ...options\n    };\n    this._options = options;\n\n    // Detect relative URL host.\n    if (this._options.host === \"/\") {\n      this._options.host = window.location.hostname;\n    }\n\n    // Set path correctly.\n    if (this._options.path) {\n      if (this._options.path[0] !== \"/\") {\n        this._options.path = \"/\" + this._options.path;\n      }\n      if (this._options.path[this._options.path.length - 1] !== \"/\") {\n        this._options.path += \"/\";\n      }\n    }\n\n    // Set whether we use SSL to same as current host\n    if (this._options.secure === undefined && this._options.host !== util.CLOUD_HOST) {\n      this._options.secure = util.isSecure();\n    } else if (this._options.host == util.CLOUD_HOST) {\n      this._options.secure = true;\n    }\n    // Set a custom log function if present\n    if (this._options.logFunction) {\n      logger.setLogFunction(this._options.logFunction);\n    }\n\n    logger.logLevel = this._options.debug || 0;\n\n    this._api = new API(options);\n    this._socket = this._createServerConnection();\n\n    // Sanity checks\n    // Ensure WebRTC supported\n    if (!util.supports.audioVideo && !util.supports.data) {\n      this._delayedAbort(\n        PeerErrorType.BrowserIncompatible,\n        \"The current browser does not support WebRTC\"\n      );\n      return;\n    }\n\n    // Ensure alphanumeric id\n    if (!!userId && !util.validateId(userId)) {\n      this._delayedAbort(PeerErrorType.InvalidID, `ID \"${userId}\" is invalid`);\n      return;\n    }\n\n    if (userId) {\n      this._initialize(userId);\n    } else {\n      this._api.retrieveId()\n        .then(id => this._initialize(id))\n        .catch(error => this._abort(PeerErrorType.ServerError, error));\n    }\n  }\n\n  private _createServerConnection(): Socket {\n    const socket = new Socket(\n      this._options.secure,\n      this._options.host!,\n      this._options.port!,\n      this._options.path!,\n      this._options.key!,\n      this._options.pingInterval\n    );\n\n    socket.on(SocketEventType.Message, (data: ServerMessage) => {\n      this._handleMessage(data);\n    });\n\n    socket.on(SocketEventType.Error, (error: string) => {\n      this._abort(PeerErrorType.SocketError, error);\n    });\n\n    socket.on(SocketEventType.Disconnected, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this.emitError(PeerErrorType.Network, \"Lost connection to server.\");\n      this.disconnect();\n    });\n\n    socket.on(SocketEventType.Close, () => {\n      if (this.disconnected) {\n        return;\n      }\n\n      this._abort(PeerErrorType.SocketClosed, \"Underlying socket is already closed.\");\n    });\n\n    return socket;\n  }\n\n  /** Initialize a connection with the server. */\n  private _initialize(id: string): void {\n    this._id = id;\n    this.socket.start(id, this._options.token!);\n  }\n\n  /** Handles messages from the server. */\n  private _handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n    const peerId = message.src;\n\n    switch (type) {\n      case ServerMessageType.Open: // The connection to the server is open.\n        this._lastServerId = this.id;\n        this._open = true;\n        this.emit(PeerEventType.Open, this.id);\n        break;\n      case ServerMessageType.Error: // Server error.\n        this._abort(PeerErrorType.ServerError, payload.msg);\n        break;\n      case ServerMessageType.IdTaken: // The selected ID is taken.\n        this._abort(PeerErrorType.UnavailableID, `ID \"${this.id}\" is taken`);\n        break;\n      case ServerMessageType.InvalidKey: // The given API key cannot be found.\n        this._abort(PeerErrorType.InvalidKey, `API KEY \"${this._options.key}\" is invalid`);\n        break;\n      case ServerMessageType.Leave: // Another peer has closed its connection to this peer.\n        logger.log(`Received leave message from ${peerId}`);\n        this._cleanupPeer(peerId);\n        this._connections.delete(peerId);\n        break;\n      case ServerMessageType.Expire: // The offer sent to a peer has expired without response.\n        this.emitError(PeerErrorType.PeerUnavailable, `Could not connect to peer ${peerId}`);\n        break;\n      case ServerMessageType.Offer: {\n        // we should consider switching this to CALL/CONNECT, but this is the least breaking option.\n        const connectionId = payload.connectionId;\n        let connection = this.getConnection(peerId, connectionId);\n\n        if (connection) {\n          connection.close();\n          logger.warn(`Offer received for existing Connection ID:${connectionId}`);\n        }\n\n        // Create a new connection.\n        if (payload.type === ConnectionType.Media) {\n          connection = new MediaConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Call, connection);\n        } else if (payload.type === ConnectionType.Data) {\n          connection = new DataConnection(peerId, this, {\n            connectionId: connectionId,\n            _payload: payload,\n            metadata: payload.metadata,\n            label: payload.label,\n            serialization: payload.serialization,\n            reliable: payload.reliable\n          });\n          this._addConnection(peerId, connection);\n          this.emit(PeerEventType.Connection, connection);\n        } else {\n          logger.warn(`Received malformed connection type:${payload.type}`);\n          return;\n        }\n\n        // Find messages.\n        const messages = this._getMessages(connectionId);\n        for (let message of messages) {\n          connection.handleMessage(message);\n        }\n\n        break;\n      }\n      default: {\n        if (!payload) {\n          logger.warn(`You received a malformed message from ${peerId} of type ${type}`);\n          return;\n        }\n\n        const connectionId = payload.connectionId;\n        const connection = this.getConnection(peerId, connectionId);\n\n        if (connection && connection.peerConnection) {\n          // Pass it on.\n          connection.handleMessage(message);\n        } else if (connectionId) {\n          // Store for possible later use\n          this._storeMessage(connectionId, message);\n        } else {\n          logger.warn(\"You received an unrecognized message:\", message);\n        }\n        break;\n      }\n    }\n  }\n\n  /** Stores messages without a set up connection, to be claimed later. */\n  private _storeMessage(connectionId: string, message: ServerMessage): void {\n    if (!this._lostMessages.has(connectionId)) {\n      this._lostMessages.set(connectionId, []);\n    }\n\n    this._lostMessages.get(connectionId).push(message);\n  }\n\n  /** Retrieve messages from lost message store */\n  //TODO Change it to private\n  public _getMessages(connectionId: string): ServerMessage[] {\n    const messages = this._lostMessages.get(connectionId);\n\n    if (messages) {\n      this._lostMessages.delete(connectionId);\n      return messages;\n    }\n\n    return [];\n  }\n\n  /**\n   * Returns a DataConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  connect(peer: string, options: PeerConnectOption = {}): DataConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect, or call reconnect \" +\n        \"on this peer if you believe its ID to still be available.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    const dataConnection = new DataConnection(peer, this, options);\n    this._addConnection(peer, dataConnection);\n    return dataConnection;\n  }\n\n  /**\n   * Returns a MediaConnection to the specified peer. See documentation for a\n   * complete list of options.\n   */\n  call(peer: string, stream: MediaStream, options: any = {}): MediaConnection {\n    if (this.disconnected) {\n      logger.warn(\n        \"You cannot connect to a new Peer because you called \" +\n        \".disconnect() on this Peer and ended your connection with the \" +\n        \"server. You can create a new Peer to reconnect.\"\n      );\n      this.emitError(\n        PeerErrorType.Disconnected,\n        \"Cannot connect to new Peer after disconnecting from server.\"\n      );\n      return;\n    }\n\n    if (!stream) {\n      logger.error(\n        \"To call a peer, you must provide a stream from your browser's `getUserMedia`.\"\n      );\n      return;\n    }\n\n    options._stream = stream;\n\n    const mediaConnection = new MediaConnection(peer, this, options);\n    this._addConnection(peer, mediaConnection);\n    return mediaConnection;\n  }\n\n  /** Add a data/media connection to this peer. */\n  private _addConnection(peerId: string, connection: BaseConnection): void {\n    logger.log(`add connection ${connection.type}:${connection.connectionId} to peerId:${peerId}`);\n\n    if (!this._connections.has(peerId)) {\n      this._connections.set(peerId, []);\n    }\n    this._connections.get(peerId).push(connection);\n  }\n\n  //TODO should be private\n  _removeConnection(connection: BaseConnection): void {\n    const connections = this._connections.get(connection.peer);\n\n    if (connections) {\n      const index = connections.indexOf(connection);\n\n      if (index !== -1) {\n        connections.splice(index, 1);\n      }\n    }\n\n    //remove from lost messages\n    this._lostMessages.delete(connection.connectionId);\n  }\n\n  /** Retrieve a data/media connection for this peer. */\n  getConnection(peerId: string, connectionId: string): null | BaseConnection {\n    const connections = this._connections.get(peerId);\n    if (!connections) {\n      return null;\n    }\n\n    for (let connection of connections) {\n      if (connection.connectionId === connectionId) {\n        return connection;\n      }\n    }\n\n    return null;\n  }\n\n  private _delayedAbort(type: PeerErrorType, message: string | Error): void {\n    setTimeout(() => {\n      this._abort(type, message);\n    }, 0);\n  }\n\n  /**\n   * Emits an error message and destroys the Peer.\n   * The Peer is not destroyed if it's in a disconnected state, in which case\n   * it retains its disconnected state and its existing connections.\n   */\n  private _abort(type: PeerErrorType, message: string | Error): void {\n    logger.error(\"Aborting!\");\n\n    this.emitError(type, message);\n\n    if (!this._lastServerId) {\n      this.destroy();\n    } else {\n      this.disconnect();\n    }\n  }\n\n  /** Emits a typed error message. */\n  emitError(type: PeerErrorType, err: string | Error): void {\n    logger.error(\"Error:\", err);\n\n    let error: Error & { type?: PeerErrorType };\n\n    if (typeof err === \"string\") {\n      error = new Error(err);\n    } else {\n      error = err as Error;\n    }\n\n    error.type = type;\n\n    this.emit(PeerEventType.Error, error);\n  }\n\n  /**\n   * Destroys the Peer: closes all active connections as well as the connection\n   *  to the server.\n   * Warning: The peer can no longer create or accept connections after being\n   *  destroyed.\n   */\n  destroy(): void {\n    if (this.destroyed) {\n      return;\n    }\n\n    logger.log(`Destroy peer with ID:${this.id}`);\n\n    this.disconnect();\n    this._cleanup();\n\n    this._destroyed = true;\n\n    this.emit(PeerEventType.Close);\n  }\n\n  /** Disconnects every connection on this peer. */\n  private _cleanup(): void {\n    for (let peerId of this._connections.keys()) {\n      this._cleanupPeer(peerId);\n      this._connections.delete(peerId);\n    }\n\n    this.socket.removeAllListeners();\n  }\n\n  /** Closes all connections to this peer. */\n  private _cleanupPeer(peerId: string): void {\n    const connections = this._connections.get(peerId);\n\n    if (!connections) return;\n\n    for (let connection of connections) {\n      connection.close();\n    }\n  }\n\n  /**\n   * Disconnects the Peer's connection to the PeerServer. Does not close any\n   *  active connections.\n   * Warning: The peer can no longer create or accept connections after being\n   *  disconnected. It also cannot reconnect to the server.\n   */\n  disconnect(): void {\n    if (this.disconnected) {\n      return;\n    }\n\n    const currentId = this.id;\n\n    logger.log(`Disconnect peer with ID:${currentId}`);\n\n    this._disconnected = true;\n    this._open = false;\n\n    this.socket.close();\n\n    this._lastServerId = currentId;\n    this._id = null;\n\n    this.emit(PeerEventType.Disconnected, currentId);\n  }\n\n  /** Attempts to reconnect with the same ID. */\n  reconnect(): void {\n    if (this.disconnected && !this.destroyed) {\n      logger.log(`Attempting reconnection to server with ID ${this._lastServerId}`);\n      this._disconnected = false;\n      this._initialize(this._lastServerId!);\n    } else if (this.destroyed) {\n      throw new Error(\"This peer cannot reconnect to the server. It has already been destroyed.\");\n    } else if (!this.disconnected && !this.open) {\n      // Do nothing. We're still connecting the first time.\n      logger.error(\"In a hurry? We're still trying to make the initial connection!\");\n    } else {\n      throw new Error(`Peer ${this.id} cannot reconnect because it is not disconnected from the server!`);\n    }\n  }\n\n  /**\n   * Get a list of available peer IDs. If you're running your own server, you'll\n   * want to set allow_discovery: true in the PeerServer options. If you're using\n   * the cloud server, email team@peerjs.com to get the functionality enabled for\n   * your key.\n   */\n  listAllPeers(cb = (_: any[]) => { }): void {\n    this._api.listAllPeers()\n      .then(peers => cb(peers))\n      .catch(error => this._abort(PeerErrorType.ServerError, error));\n  }\n}\n", "const LOG_PREFIX = 'PeerJS: ';\n\n/*\nPrints log messages depending on the debug level passed in. Defaults to 0.\n0  Prints no logs.\n1  Prints only errors.\n2  Prints errors and warnings.\n3  Prints all logs.\n*/\nexport enum LogLevel {\n    Disabled,\n    Errors,\n    Warnings,\n    All\n}\n\nclass Logger {\n    private _logLevel = LogLevel.Disabled;\n\n    get logLevel(): LogLevel { return this._logLevel; }\n\n    set logLevel(logLevel: LogLevel) { this._logLevel = logLevel; }\n\n    log(...args: any[]) {\n        if (this._logLevel >= LogLevel.All) {\n            this._print(LogLevel.All, ...args);\n        }\n    }\n\n    warn(...args: any[]) {\n        if (this._logLevel >= LogLevel.Warnings) {\n            this._print(LogLevel.Warnings, ...args);\n        }\n    }\n\n    error(...args: any[]) {\n        if (this._logLevel >= LogLevel.Errors) {\n            this._print(LogLevel.Errors, ...args);\n        }\n    }\n\n    setLogFunction(fn: (logLevel: LogLevel, ..._: any[]) => void): void {\n        this._print = fn;\n    }\n\n    private _print(logLevel: LogLevel, ...rest: any[]): void {\n        const copy = [LOG_PREFIX, ...rest];\n\n        for (let i in copy) {\n            if (copy[i] instanceof Error) {\n                copy[i] = \"(\" + copy[i].name + \") \" + copy[i].message;\n\n            }\n        }\n\n        if (logLevel >= LogLevel.All) {\n            console.log(...copy);\n        } else if (logLevel >= LogLevel.Warnings) {\n            console.warn(\"WARNING\", ...copy);\n        } else if (logLevel >= LogLevel.Errors) {\n            console.error(\"ERROR\", ...copy);\n        }\n    }\n}\n\nexport default new Logger();", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\nimport { SocketEventType, ServerMessageType } from \"./enums\";\n\n/**\n * An abstraction on top of WebSockets to provide fastest\n * possible connection for peers.\n */\nexport class Socket extends EventEmitter {\n  private _disconnected: boolean = true;\n  private _id?: string;\n  private _messagesQueue: Array<object> = [];\n  private _socket?: WebSocket;\n  private _wsPingTimer?: any;\n  private readonly _baseUrl: string;\n\n  constructor(\n    secure: any,\n    host: string,\n    port: number,\n    path: string,\n    key: string,\n    private readonly pingInterval: number = 5000,\n  ) {\n    super();\n\n    const wsProtocol = secure ? \"wss://\" : \"ws://\";\n\n    this._baseUrl = wsProtocol + host + \":\" + port + path + \"peerjs?key=\" + key;\n  }\n\n  start(id: string, token: string): void {\n    this._id = id;\n\n    const wsUrl = `${this._baseUrl}&id=${id}&token=${token}`;\n\n    if (!!this._socket || !this._disconnected) {\n      return;\n    }\n\n    this._socket = new WebSocket(wsUrl);\n    this._disconnected = false;\n\n    this._socket.onmessage = (event) => {\n      let data;\n\n      try {\n        data = JSON.parse(event.data);\n        logger.log(\"Server message received:\", data);\n      } catch (e) {\n        logger.log(\"Invalid server message\", event.data);\n        return;\n      }\n\n      this.emit(SocketEventType.Message, data);\n    };\n\n    this._socket.onclose = (event) => {\n      if (this._disconnected) {\n        return;\n      }\n\n      logger.log(\"Socket closed.\", event);\n\n      this._cleanup();\n      this._disconnected = true;\n\n      this.emit(SocketEventType.Disconnected);\n    };\n\n    // Take care of the queue of connections if necessary and make sure Peer knows\n    // socket is open.\n    this._socket.onopen = () => {\n      if (this._disconnected) {\n        return;\n      }\n\n      this._sendQueuedMessages();\n\n      logger.log(\"Socket open\");\n\n      this._scheduleHeartbeat();\n    };\n  }\n\n  private _scheduleHeartbeat(): void {\n    this._wsPingTimer = setTimeout(() => {\n      this._sendHeartbeat();\n    }, this.pingInterval);\n  }\n\n  private _sendHeartbeat(): void {\n    if (!this._wsOpen()) {\n      logger.log(`Cannot send heartbeat, because socket closed`);\n      return;\n    }\n\n    const message = JSON.stringify({ type: ServerMessageType.Heartbeat });\n\n    this._socket!.send(message);\n\n    this._scheduleHeartbeat();\n  }\n\n  /** Is the websocket currently open? */\n  private _wsOpen(): boolean {\n    return !!this._socket && this._socket.readyState === 1;\n  }\n\n  /** Send queued messages. */\n  private _sendQueuedMessages(): void {\n    //Create copy of queue and clear it,\n    //because send method push the message back to queue if smth will go wrong\n    const copiedQueue = [...this._messagesQueue];\n    this._messagesQueue = [];\n\n    for (const message of copiedQueue) {\n      this.send(message);\n    }\n  }\n\n  /** Exposed send for DC & Peer. */\n  send(data: any): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    // If we didn't get an ID yet, we can't yet send anything so we should queue\n    // up these messages.\n    if (!this._id) {\n      this._messagesQueue.push(data);\n      return;\n    }\n\n    if (!data.type) {\n      this.emit(SocketEventType.Error, \"Invalid message\");\n      return;\n    }\n\n    if (!this._wsOpen()) {\n      return;\n    }\n\n    const message = JSON.stringify(data);\n\n    this._socket!.send(message);\n  }\n\n  close(): void {\n    if (this._disconnected) {\n      return;\n    }\n\n    this._cleanup();\n\n    this._disconnected = true;\n  }\n\n  private _cleanup(): void {\n    if (this._socket) {\n      this._socket.onopen = this._socket.onmessage = this._socket.onclose = null;\n      this._socket.close();\n      this._socket = undefined;\n    }\n\n    clearTimeout(this._wsPingTimer!);\n  }\n}\n", "export enum ConnectionEventType {\n  Open = \"open\",\n  Stream = \"stream\",\n  Data = \"data\",\n  Close = \"close\",\n  Error = \"error\",\n  IceStateChanged = \"iceStateChanged\"\n}\n\nexport enum ConnectionType {\n  Data = \"data\",\n  Media = \"media\"\n}\n\nexport enum PeerEventType {\n  Open = \"open\",\n  Close = \"close\",\n  Connection = \"connection\",\n  Call = \"call\",\n  Disconnected = \"disconnected\",\n  Error = \"error\"\n}\n\nexport enum PeerErrorType {\n  BrowserIncompatible = \"browser-incompatible\",\n  Disconnected = \"disconnected\",\n  InvalidID = \"invalid-id\",\n  InvalidKey = \"invalid-key\",\n  Network = \"network\",\n  PeerUnavailable = \"peer-unavailable\",\n  SslUnavailable = \"ssl-unavailable\",\n  ServerError = \"server-error\",\n  SocketError = \"socket-error\",\n  SocketClosed = \"socket-closed\",\n  UnavailableID = \"unavailable-id\",\n  WebRTC = \"webrtc\"\n}\n\nexport enum SerializationType {\n  Binary = \"binary\",\n  BinaryUTF8 = \"binary-utf8\",\n  JSON = \"json\"\n}\n\nexport enum SocketEventType {\n  Message = \"message\",\n  Disconnected = \"disconnected\",\n  Error = \"error\",\n  Close = \"close\"\n}\n\nexport enum ServerMessageType {\n  Heartbeat = \"HEARTBEAT\",\n  Candidate = \"CANDIDATE\",\n  Offer = \"OFFER\",\n  Answer = \"ANSWER\",\n  Open = \"OPEN\", // The connection to the server is open.\n  Error = \"ERROR\", // Server error.\n  IdTaken = \"ID-TAKEN\", // The selected ID is taken.\n  InvalidKey = \"INVALID-KEY\", // The given API key cannot be found.\n  Leave = \"LEAVE\", // Another peer has closed its connection to this peer.\n  Expire = \"EXPIRE\" // The offer sent to a peer has expired without response.\n\n}", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { MediaConnection } from \"./mediaconnection\";\nimport { DataConnection } from \"./dataconnection\";\nimport { ConnectionType, PeerErrorType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { BaseConnection } from \"./baseconnection\";\n\n/**\n * Manages all negotiations between Peers.\n */\nexport class Negotiator {\n  constructor(readonly connection: BaseConnection) { }\n\n  /** Returns a PeerConnection object set up correctly (for data, media). */\n  startConnection(options: any) {\n    const peerConnection = this._startPeerConnection();\n\n    // Set the connection's PC.\n    this.connection.peerConnection = peerConnection;\n\n    if (this.connection.type === ConnectionType.Media && options._stream) {\n      this._addTracksToConnection(options._stream, peerConnection);\n    }\n\n    // What do we need to do now?\n    if (options.originator) {\n      if (this.connection.type === ConnectionType.Data) {\n        const dataConnection = <DataConnection>this.connection;\n\n        const config: RTCDataChannelInit = { ordered: !!options.reliable };\n\n        const dataChannel = peerConnection.createDataChannel(\n          dataConnection.label,\n          config\n        );\n        dataConnection.initialize(dataChannel);\n      }\n\n      this._makeOffer();\n    } else {\n      this.handleSDP(\"OFFER\", options.sdp);\n    }\n  }\n\n  /** Start a PC. */\n  private _startPeerConnection(): RTCPeerConnection {\n    logger.log(\"Creating RTCPeerConnection.\");\n\n    const peerConnection = new RTCPeerConnection(this.connection.provider.options.config);\n\n    this._setupListeners(peerConnection);\n\n    return peerConnection;\n  }\n\n  /** Set up various WebRTC listeners. */\n  private _setupListeners(\n    peerConnection: RTCPeerConnection\n  ) {\n    const peerId = this.connection.peer;\n    const connectionId = this.connection.connectionId;\n    const connectionType = this.connection.type;\n    const provider = this.connection.provider;\n\n    // ICE CANDIDATES.\n    logger.log(\"Listening for ICE candidates.\");\n\n    peerConnection.onicecandidate = (evt) => {\n      if (!evt.candidate || !evt.candidate.candidate) return;\n\n      logger.log(`Received ICE candidates for ${peerId}:`, evt.candidate);\n\n      provider.socket.send({\n        type: ServerMessageType.Candidate,\n        payload: {\n          candidate: evt.candidate,\n          type: connectionType,\n          connectionId: connectionId\n        },\n        dst: peerId\n      });\n    };\n\n    peerConnection.oniceconnectionstatechange = () => {\n      switch (peerConnection.iceConnectionState) {\n        case \"failed\":\n          logger.log(\n            \"iceConnectionState is failed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Negotiation of connection to \" + peerId + \" failed.\")\n          );\n          this.connection.close();\n          break;\n        case \"closed\":\n          logger.log(\n            \"iceConnectionState is closed, closing connections to \" +\n            peerId\n          );\n          this.connection.emit(\n            ConnectionEventType.Error,\n            new Error(\"Connection to \" + peerId + \" closed.\")\n          );\n          this.connection.close();\n          break;\n        case \"disconnected\":\n          logger.log(\n            \"iceConnectionState changed to disconnected on the connection with \" +\n            peerId\n          );\n          break;\n        case \"completed\":\n          peerConnection.onicecandidate = util.noop;\n          break;\n      }\n\n      this.connection.emit(ConnectionEventType.IceStateChanged, peerConnection.iceConnectionState);\n    };\n\n    // DATACONNECTION.\n    logger.log(\"Listening for data channel\");\n    // Fired between offer and answer, so options should already be saved\n    // in the options hash.\n    peerConnection.ondatachannel = (evt) => {\n      logger.log(\"Received data channel\");\n\n      const dataChannel = evt.channel;\n      const connection = <DataConnection>(\n        provider.getConnection(peerId, connectionId)\n      );\n\n      connection.initialize(dataChannel);\n    };\n\n    // MEDIACONNECTION.\n    logger.log(\"Listening for remote stream\");\n\n    peerConnection.ontrack = (evt) => {\n      logger.log(\"Received remote stream\");\n\n      const stream = evt.streams[0];\n      const connection = provider.getConnection(peerId, connectionId);\n\n      if (connection.type === ConnectionType.Media) {\n        const mediaConnection = <MediaConnection>connection;\n\n        this._addStreamToMediaConnection(stream, mediaConnection);\n      }\n    };\n  }\n\n  cleanup(): void {\n    logger.log(\"Cleaning up PeerConnection to \" + this.connection.peer);\n\n    const peerConnection = this.connection.peerConnection;\n\n    if (!peerConnection) {\n      return;\n    }\n\n    this.connection.peerConnection = null;\n\n    //unsubscribe from all PeerConnection's events\n    peerConnection.onicecandidate = peerConnection.oniceconnectionstatechange = peerConnection.ondatachannel = peerConnection.ontrack = () => { };\n\n    const peerConnectionNotClosed = peerConnection.signalingState !== \"closed\";\n    let dataChannelNotClosed = false;\n\n    if (this.connection.type === ConnectionType.Data) {\n      const dataConnection = <DataConnection>this.connection;\n      const dataChannel = dataConnection.dataChannel;\n\n      if (dataChannel) {\n        dataChannelNotClosed = !!dataChannel.readyState && dataChannel.readyState !== \"closed\";\n      }\n    }\n\n    if (peerConnectionNotClosed || dataChannelNotClosed) {\n      peerConnection.close();\n    }\n  }\n\n  private async _makeOffer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const offer = await peerConnection.createOffer(\n        this.connection.options.constraints\n      );\n\n      logger.log(\"Created offer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        offer.sdp = this.connection.options.sdpTransform(offer.sdp) || offer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(offer);\n\n        logger.log(\"Set localDescription:\", offer, `for:${this.connection.peer}`);\n\n        let payload: any = {\n          sdp: offer,\n          type: this.connection.type,\n          connectionId: this.connection.connectionId,\n          metadata: this.connection.metadata,\n          browser: util.browser\n        };\n\n        if (this.connection.type === ConnectionType.Data) {\n          const dataConnection = <DataConnection>this.connection;\n\n          payload = {\n            ...payload,\n            label: dataConnection.label,\n            reliable: dataConnection.reliable,\n            serialization: dataConnection.serialization\n          };\n        }\n\n        provider.socket.send({\n          type: ServerMessageType.Offer,\n          payload,\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        // TODO: investigate why _makeOffer is being called from the answer\n        if (\n          err !=\n          \"OperationError: Failed to set local offer sdp: Called in wrong state: kHaveRemoteOffer\"\n        ) {\n          provider.emitError(PeerErrorType.WebRTC, err);\n          logger.log(\"Failed to setLocalDescription, \", err);\n        }\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to createOffer, \", err_1);\n    }\n  }\n\n  private async _makeAnswer(): Promise<void> {\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      const answer = await peerConnection.createAnswer();\n      logger.log(\"Created answer.\");\n\n      if (this.connection.options.sdpTransform && typeof this.connection.options.sdpTransform === 'function') {\n        answer.sdp = this.connection.options.sdpTransform(answer.sdp) || answer.sdp;\n      }\n\n      try {\n        await peerConnection.setLocalDescription(answer);\n\n        logger.log(`Set localDescription:`, answer, `for:${this.connection.peer}`);\n\n        provider.socket.send({\n          type: ServerMessageType.Answer,\n          payload: {\n            sdp: answer,\n            type: this.connection.type,\n            connectionId: this.connection.connectionId,\n            browser: util.browser\n          },\n          dst: this.connection.peer\n        });\n      } catch (err) {\n        provider.emitError(PeerErrorType.WebRTC, err);\n        logger.log(\"Failed to setLocalDescription, \", err);\n      }\n    } catch (err_1) {\n      provider.emitError(PeerErrorType.WebRTC, err_1);\n      logger.log(\"Failed to create answer, \", err_1);\n    }\n  }\n\n  /** Handle an SDP. */\n  async handleSDP(\n    type: string,\n    sdp: any\n  ): Promise<void> {\n    sdp = new RTCSessionDescription(sdp);\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    logger.log(\"Setting remote description\", sdp);\n\n    const self = this;\n\n    try {\n      await peerConnection.setRemoteDescription(sdp);\n      logger.log(`Set remoteDescription:${type} for:${this.connection.peer}`);\n      if (type === \"OFFER\") {\n        await self._makeAnswer();\n      }\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to setRemoteDescription, \", err);\n    }\n  }\n\n  /** Handle a candidate. */\n  async handleCandidate(ice: any): Promise<void> {\n    logger.log(`handleCandidate:`, ice);\n\n    const candidate = ice.candidate;\n    const sdpMLineIndex = ice.sdpMLineIndex;\n    const sdpMid = ice.sdpMid;\n    const peerConnection = this.connection.peerConnection;\n    const provider = this.connection.provider;\n\n    try {\n      await peerConnection.addIceCandidate(\n        new RTCIceCandidate({\n          sdpMid: sdpMid,\n          sdpMLineIndex: sdpMLineIndex,\n          candidate: candidate\n        })\n      );\n      logger.log(`Added ICE candidate for:${this.connection.peer}`);\n    } catch (err) {\n      provider.emitError(PeerErrorType.WebRTC, err);\n      logger.log(\"Failed to handleCandidate, \", err);\n    }\n  }\n\n  private _addTracksToConnection(\n    stream: MediaStream,\n    peerConnection: RTCPeerConnection\n  ): void {\n    logger.log(`add tracks from stream ${stream.id} to peer connection`);\n\n    if (!peerConnection.addTrack) {\n      return logger.error(\n        `Your browser does't support RTCPeerConnection#addTrack. Ignored.`\n      );\n    }\n\n    stream.getTracks().forEach(track => {\n      peerConnection.addTrack(track, stream);\n    });\n  }\n\n  private _addStreamToMediaConnection(\n    stream: MediaStream,\n    mediaConnection: MediaConnection\n  ): void {\n    logger.log(\n      `add stream ${stream.id} to media connection ${\n      mediaConnection.connectionId\n      }`\n    );\n\n    mediaConnection.addStream(stream);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport { Peer } from \"./peer\";\nimport { ServerMessage } from \"./servermessage\";\nimport { ConnectionType } from \"./enums\";\n\nexport abstract class BaseConnection extends EventEmitter {\n  protected _open = false;\n\n  readonly metadata: any;\n  connectionId: string;\n\n  peerConnection: RTCPeerConnection;\n\n  abstract get type(): ConnectionType;\n\n  get open() {\n    return this._open;\n  }\n\n  constructor(\n    readonly peer: string,\n    public provider: Peer,\n    readonly options: any\n  ) {\n    super();\n\n    this.metadata = options.metadata;\n  }\n\n  abstract close(): void;\n\n  abstract handleMessage(message: ServerMessage): void;\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport { ConnectionType, ConnectionEventType, ServerMessageType } from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { AnswerOption } from \"..\";\n\n/**\n * Wraps the streaming interface between two Peers.\n */\nexport class MediaConnection extends BaseConnection {\n  private static readonly ID_PREFIX = \"mc_\";\n\n  private _negotiator: Negotiator;\n  private _localStream: MediaStream;\n  private _remoteStream: MediaStream;\n\n  get type() {\n    return ConnectionType.Media;\n  }\n\n  get localStream(): MediaStream { return this._localStream; }\n  get remoteStream(): MediaStream { return this._remoteStream; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this._localStream = this.options._stream;\n    this.connectionId =\n      this.options.connectionId ||\n      MediaConnection.ID_PREFIX + util.randomToken();\n\n    this._negotiator = new Negotiator(this);\n\n    if (this._localStream) {\n      this._negotiator.startConnection({\n        _stream: this._localStream,\n        originator: true\n      });\n    }\n  }\n\n  addStream(remoteStream) {\n    logger.log(\"Receiving stream\", remoteStream);\n\n    this._remoteStream = remoteStream;\n    super.emit(ConnectionEventType.Stream, remoteStream); // Should we call this `open`?\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const type = message.type;\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        // Forward to negotiator\n        this._negotiator.handleSDP(type, payload.sdp);\n        this._open = true;\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(`Unrecognized message type:${type} from peer:${this.peer}`);\n        break;\n    }\n  }\n\n  answer(stream: MediaStream, options: AnswerOption = {}): void {\n    if (this._localStream) {\n      logger.warn(\n        \"Local stream already exists on this MediaConnection. Are you answering a call twice?\"\n      );\n      return;\n    }\n\n    this._localStream = stream;\n\n    if (options && options.sdpTransform) {\n      this.options.sdpTransform = options.sdpTransform;\n    }\n\n    this._negotiator.startConnection({ ...this.options._payload, _stream: stream });\n    // Retrieve lost messages stored because PeerConnection not set up.\n    const messages = this.provider._getMessages(this.connectionId);\n\n    for (let message of messages) {\n      this.handleMessage(message);\n    }\n\n    this._open = true;\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    this._localStream = null;\n    this._remoteStream = null;\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.options && this.options._stream) {\n      this.options._stream = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n}\n", "import { EventEmitter } from \"eventemitter3\";\nimport logger from \"./logger\";\n\nexport class EncodingQueue extends EventEmitter {\n  readonly fileReader: FileReader = new FileReader();\n\n  private _queue: Blob[] = [];\n  private _processing: boolean = false;\n\n  constructor() {\n    super();\n\n    this.fileReader.onload = (evt) => {\n      this._processing = false;\n\n      if (evt.target) {\n        this.emit('done', evt.target.result as ArrayBuffer);\n      }\n\n      this.doNextTask();\n    };\n\n    this.fileReader.onerror = (evt) => {\n      logger.error(`EncodingQueue error:`, evt);\n      this._processing = false;\n      this.destroy();\n      this.emit('error', evt);\n    }\n  }\n\n  get queue(): Blob[] {\n    return this._queue;\n  }\n\n  get size(): number {\n    return this.queue.length;\n  }\n\n  get processing(): boolean {\n    return this._processing;\n  }\n\n  enque(blob: Blob): void {\n    this.queue.push(blob);\n\n    if (this.processing) return;\n\n    this.doNextTask();\n  }\n\n  destroy(): void {\n    this.fileReader.abort();\n    this._queue = [];\n  }\n\n  private doNextTask(): void {\n    if (this.size === 0) return;\n    if (this.processing) return;\n\n    this._processing = true;\n\n    this.fileReader.readAsArrayBuffer(this.queue.shift());\n  }\n}", "import { util } from \"./util\";\nimport logger from \"./logger\";\nimport { Negotiator } from \"./negotiator\";\nimport {\n  ConnectionType,\n  ConnectionEventType,\n  SerializationType,\n  ServerMessageType\n} from \"./enums\";\nimport { Peer } from \"./peer\";\nimport { BaseConnection } from \"./baseconnection\";\nimport { ServerMessage } from \"./servermessage\";\nimport { EncodingQueue } from './encodingQueue';\nimport { DataConnection as IDataConnection } from '../index';\n\n/**\n * Wraps a DataChannel between two Peers.\n */\nexport class DataConnection extends BaseConnection implements IDataConnection {\n  private static readonly ID_PREFIX = \"dc_\";\n  private static readonly MAX_BUFFERED_AMOUNT = 8 * 1024 * 1024;\n\n  private _negotiator: Negotiator;\n  readonly label: string;\n  readonly serialization: SerializationType;\n  readonly reliable: boolean;\n  stringify: (data: any) => string = JSON.stringify;\n  parse: (data: string) => any = JSON.parse;\n\n  get type() {\n    return ConnectionType.Data;\n  }\n\n  private _buffer: any[] = [];\n  private _bufferSize = 0;\n  private _buffering = false;\n  private _chunkedData: {\n    [id: number]: {\n      data: Blob[],\n      count: number,\n      total: number\n    }\n  } = {};\n\n  private _dc: RTCDataChannel;\n  private _encodingQueue = new EncodingQueue();\n\n  get dataChannel(): RTCDataChannel {\n    return this._dc;\n  }\n\n  get bufferSize(): number { return this._bufferSize; }\n\n  constructor(peerId: string, provider: Peer, options: any) {\n    super(peerId, provider, options);\n\n    this.connectionId =\n      this.options.connectionId || DataConnection.ID_PREFIX + util.randomToken();\n\n    this.label = this.options.label || this.connectionId;\n    this.serialization = this.options.serialization || SerializationType.Binary;\n    this.reliable = !!this.options.reliable;\n\n    this._encodingQueue.on('done', (ab: ArrayBuffer) => {\n      this._bufferedSend(ab);\n    });\n\n    this._encodingQueue.on('error', () => {\n      logger.error(`DC#${this.connectionId}: Error occured in encoding from blob to arraybuffer, close DC`);\n      this.close();\n    });\n\n    this._negotiator = new Negotiator(this);\n\n    this._negotiator.startConnection(\n      this.options._payload || {\n        originator: true\n      }\n    );\n  }\n\n  /** Called by the Negotiator when the DataChannel is ready. */\n  initialize(dc: RTCDataChannel): void {\n    this._dc = dc;\n    this._configureDataChannel();\n  }\n\n  private _configureDataChannel(): void {\n    if (!util.supports.binaryBlob || util.supports.reliable) {\n      this.dataChannel.binaryType = \"arraybuffer\";\n    }\n\n    this.dataChannel.onopen = () => {\n      logger.log(`DC#${this.connectionId} dc connection success`);\n      this._open = true;\n      this.emit(ConnectionEventType.Open);\n    };\n\n    this.dataChannel.onmessage = (e) => {\n      logger.log(`DC#${this.connectionId} dc onmessage:`, e.data);\n      this._handleDataMessage(e);\n    };\n\n    this.dataChannel.onclose = () => {\n      logger.log(`DC#${this.connectionId} dc closed for:`, this.peer);\n      this.close();\n    };\n  }\n\n  // Handles a DataChannel message.\n  private _handleDataMessage({ data }: { data: Blob | ArrayBuffer | string }): void {\n    const datatype = data.constructor;\n\n    const isBinarySerialization = this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8;\n\n    let deserializedData: any = data;\n\n    if (isBinarySerialization) {\n      if (datatype === Blob) {\n        // Datatype should never be blob\n        util.blobToArrayBuffer(data as Blob, (ab) => {\n          const unpackedData = util.unpack(ab);\n          this.emit(ConnectionEventType.Data, unpackedData);\n        });\n        return;\n      } else if (datatype === ArrayBuffer) {\n        deserializedData = util.unpack(data as ArrayBuffer);\n      } else if (datatype === String) {\n        // String fallback for binary data for browsers that don't support binary yet\n        const ab = util.binaryStringToArrayBuffer(data as string);\n        deserializedData = util.unpack(ab);\n      }\n    } else if (this.serialization === SerializationType.JSON) {\n      deserializedData = this.parse(data as string);\n    }\n\n    // Check if we've chunked--if so, piece things back together.\n    // We're guaranteed that this isn't 0.\n    if (deserializedData.__peerData) {\n      this._handleChunk(deserializedData);\n      return;\n    }\n\n    super.emit(ConnectionEventType.Data, deserializedData);\n  }\n\n  private _handleChunk(data: { __peerData: number, n: number, total: number, data: Blob }): void {\n    const id = data.__peerData;\n    const chunkInfo = this._chunkedData[id] || {\n      data: [],\n      count: 0,\n      total: data.total\n    };\n\n    chunkInfo.data[data.n] = data.data;\n    chunkInfo.count++;\n    this._chunkedData[id] = chunkInfo;\n\n    if (chunkInfo.total === chunkInfo.count) {\n      // Clean up before making the recursive call to `_handleDataMessage`.\n      delete this._chunkedData[id];\n\n      // We've received all the chunks--time to construct the complete data.\n      const data = new Blob(chunkInfo.data);\n      this._handleDataMessage({ data });\n    }\n  }\n\n  /**\n   * Exposed functionality for users.\n   */\n\n  /** Allows user to close connection. */\n  close(): void {\n    this._buffer = [];\n    this._bufferSize = 0;\n    this._chunkedData = {};\n\n    if (this._negotiator) {\n      this._negotiator.cleanup();\n      this._negotiator = null;\n    }\n\n    if (this.provider) {\n      this.provider._removeConnection(this);\n\n      this.provider = null;\n    }\n\n    if (this.dataChannel) {\n      this.dataChannel.onopen = null;\n      this.dataChannel.onmessage = null;\n      this.dataChannel.onclose = null;\n      this._dc = null;\n    }\n\n    if (this._encodingQueue) {\n      this._encodingQueue.destroy();\n      this._encodingQueue.removeAllListeners();\n      this._encodingQueue = null;\n    }\n\n    if (!this.open) {\n      return;\n    }\n\n    this._open = false;\n\n    super.emit(ConnectionEventType.Close);\n  }\n\n  /** Allows user to send data. */\n  send(data: any, chunked?: boolean): void {\n    if (!this.open) {\n      super.emit(\n        ConnectionEventType.Error,\n        new Error(\n          \"Connection is not open. You should listen for the `open` event before sending messages.\"\n        )\n      );\n      return;\n    }\n\n    if (this.serialization === SerializationType.JSON) {\n      this._bufferedSend(this.stringify(data));\n    } else if (\n      this.serialization === SerializationType.Binary ||\n      this.serialization === SerializationType.BinaryUTF8\n    ) {\n      const blob = util.pack(data);\n\n      if (!chunked && blob.size > util.chunkedMTU) {\n        this._sendChunks(blob);\n        return;\n      }\n\n      if (!util.supports.binaryBlob) {\n        // We only do this if we really need to (e.g. blobs are not supported),\n        // because this conversion is costly.\n        this._encodingQueue.enque(blob);\n      } else {\n        this._bufferedSend(blob);\n      }\n    } else {\n      this._bufferedSend(data);\n    }\n  }\n\n  private _bufferedSend(msg: any): void {\n    if (this._buffering || !this._trySend(msg)) {\n      this._buffer.push(msg);\n      this._bufferSize = this._buffer.length;\n    }\n  }\n\n  // Returns true if the send succeeds.\n  private _trySend(msg: any): boolean {\n    if (!this.open) {\n      return false;\n    }\n\n    if (this.dataChannel.bufferedAmount > DataConnection.MAX_BUFFERED_AMOUNT) {\n      this._buffering = true;\n      setTimeout(() => {\n        this._buffering = false;\n        this._tryBuffer();\n      }, 50);\n\n      return false;\n    }\n\n    try {\n      this.dataChannel.send(msg);\n    } catch (e) {\n      logger.error(`DC#:${this.connectionId} Error when sending:`, e);\n      this._buffering = true;\n\n      this.close();\n\n      return false;\n    }\n\n    return true;\n  }\n\n  // Try to send the first message in the buffer.\n  private _tryBuffer(): void {\n    if (!this.open) {\n      return;\n    }\n\n    if (this._buffer.length === 0) {\n      return;\n    }\n\n    const msg = this._buffer[0];\n\n    if (this._trySend(msg)) {\n      this._buffer.shift();\n      this._bufferSize = this._buffer.length;\n      this._tryBuffer();\n    }\n  }\n\n  private _sendChunks(blob: Blob): void {\n    const blobs = util.chunk(blob);\n    logger.log(`DC#${this.connectionId} Try to send ${blobs.length} chunks...`);\n\n    for (let blob of blobs) {\n      this.send(blob, true);\n    }\n  }\n\n  handleMessage(message: ServerMessage): void {\n    const payload = message.payload;\n\n    switch (message.type) {\n      case ServerMessageType.Answer:\n        this._negotiator.handleSDP(message.type, payload.sdp);\n        break;\n      case ServerMessageType.Candidate:\n        this._negotiator.handleCandidate(payload.candidate);\n        break;\n      default:\n        logger.warn(\n          \"Unrecognized message type:\",\n          message.type,\n          \"from peer:\",\n          this.peer\n        );\n        break;\n    }\n  }\n}\n", "import { util } from \"./util\";\nimport logger from \"./logger\";\n\nexport class API {\n  constructor(private readonly _options: any) { }\n\n  private _buildUrl(method: string): string {\n    const protocol = this._options.secure ? \"https://\" : \"http://\";\n    let url =\n      protocol +\n      this._options.host +\n      \":\" +\n      this._options.port +\n      this._options.path +\n      this._options.key +\n      \"/\" +\n      method;\n    const queryString = \"?ts=\" + new Date().getTime() + \"\" + Math.random();\n    url += queryString;\n\n    return url;\n  }\n\n  /** Get a unique ID from the server via XHR and initialize with it. */\n  async retrieveId(): Promise<string> {\n    const url = this._buildUrl(\"id\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.text();\n    } catch (error) {\n      logger.error(\"Error retrieving ID\", error);\n\n      let pathError = \"\";\n\n      if (\n        this._options.path === \"/\" &&\n        this._options.host !== util.CLOUD_HOST\n      ) {\n        pathError =\n          \" If you passed in a `path` to your self-hosted PeerServer, \" +\n          \"you'll also need to pass in that same path when creating a new \" +\n          \"Peer.\";\n      }\n\n      throw new Error(\"Could not get an ID from the server.\" + pathError);\n    }\n  }\n\n  /** @deprecated */\n  async listAllPeers(): Promise<any[]> {\n    const url = this._buildUrl(\"peers\");\n\n    try {\n      const response = await fetch(url);\n\n      if (response.status !== 200) {\n        if (response.status === 401) {\n          let helpfulError = \"\";\n\n          if (this._options.host === util.CLOUD_HOST) {\n            helpfulError =\n              \"It looks like you're using the cloud server. You can email \" +\n              \"team@peerjs.com to enable peer listing for your API key.\";\n          } else {\n            helpfulError =\n              \"You need to enable `allow_discovery` on your self-hosted \" +\n              \"PeerServer to use this feature.\";\n          }\n\n          throw new Error(\"It doesn't look like you have permission to list peers IDs. \" +\n            helpfulError);\n        }\n\n        throw new Error(`Error. Status:${response.status}`);\n      }\n\n      return response.json();\n    } catch (error) {\n      logger.error(\"Error retrieving list peers\", error);\n\n      throw new Error(\"Could not get list peers from the server.\" + error);\n    }\n  }\n}\n", "import { util } from \"./util\";\nimport { Peer } from \"./peer\";\n\nexport const peerjs = {\n  Peer,\n  util\n};\n\nexport default Peer;\n\n(<any>window).peerjs = peerjs;\n/** @deprecated Should use peerjs namespace */\n(<any>window).Peer = Peer;\n"],
  "mappings": "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",
  "names": []
}
